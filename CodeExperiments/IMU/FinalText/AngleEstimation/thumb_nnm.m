function [y1,xf1,xf2] = thumb_nnm(x1,x2,xi1,xi2)
%THUMB_NNM neural network simulation function.
%
% Auto-generated by MATLAB, 27-Aug-2019 17:32:39.
% 
% [y1,xf1,xf2] = thumb_nnm(x1,x2,xi1,xi2) takes these arguments:
%   x1 = 8xTS matrix, input #1
%   x2 = 3xTS matrix, input #2
%   xi1 = 8x2 matrix, initial 2 delay states for input #1.
%   xi2 = 3x2 matrix, initial 2 delay states for input #2.
% and returns:
%   y1 = 3xTS matrix, output #1
%   xf1 = 8x2 matrix, final 2 delay states for input #1.
%   xf2 = 3x2 matrix, final 2 delay states for input #2.
% where TS is the number of timesteps.

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [-0.7748;-0.1929;0.57;0.0952;0.0206;-0.0416;0.9459;0.082];
x1_step1.gain = [5.14535631592488;5.22875816993464;8.48896434634974;4.64252553389044;7.5046904315197;10.5042016806723;50.251256281407;13.9470013947001];
x1_step1.ymin = -1;

% Input 2
x2_step1.xoffset = [-4.60253906;4.59144283;12.2107028];
x2_step1.gain = [0.0354831019441904;0.0354391208186784;0.0438105743716592];
x2_step1.ymin = -1;

% Layer 1
b1 = [0.29164583573863289701;0.23021111519798737044;0.23618615307246221269;-0.23106275798404668498;-0.190900042653230545;-0.65192671819412872924;-0.25419011431524896061;-0.06371549345992587321;0.16971955028412208377;0.20701045255221825481];
IW1_1 = [0.24545076993864536896 0.73503736985949741367 0.48979332919257811962 -0.59912540499830557739 -0.21735347534199858655 -0.40413724878044615663 -0.2227480289951275505 0.20760024786197184277 -0.65080813143520666042 -1.0571696623223465483 -0.15869661137959911734 1.1165659158457803546 0.46087694171968029977 -0.11276813382247580231 -0.053913874252592343395 -0.93345105477077183753;-0.48929420545854057645 0.38758610100456508674 1.020250763808165706 -0.50130252131927510728 -0.97138929892484149331 0.52481704638010795438 -0.51745547822551996031 0.66507645985037899816 0.38874915388999786714 -0.22502496677718353268 -0.27250532918638670221 0.64764995206721431842 1.0569911248213927912 -0.89120316649873143611 0.587078706582839005 -0.5373216806966187864;0.38571195767443683389 0.34230635221443372895 0.064459524649896848825 -0.83325649082792363487 0.59089837039815507058 0.030382056573624194318 0.92425708632045311397 -0.20897302466498249296 0.23851219313772040187 -0.58880007557436286891 -0.53408002812878396792 0.76575446652083334342 -0.45035594896375208407 0.095428413722003113673 -0.60896927410369350309 0.34830695668907740714;-0.39186365727726585328 -0.41004140643896452856 -0.12808646365123049771 0.56172627938492680766 0.0093339244372523735849 0.25676623310158530611 -0.24225796052497980404 -0.19772077852984137891 -0.086494935461706529134 0.51710529186238474164 0.37682023318947921453 -0.4679588586965050534 -0.21308283079792722514 -0.27697585716381567522 0.079356566362054195563 -0.01946072967793081171;1.3907095459868139553 -0.52848786781836687432 -1.1020630966178177612 0.42959761255631034871 -2.162198538963723049 0.30388987156300079073 -1.1176442728082827127 1.1425278788460984103 -1.1897562261378484827 0.96304731197318593772 0.97120701233301653943 -0.56451473680108343878 2.3701281618733420764 0.14574792053856697183 1.1096290171429172844 -0.72529343035717452892;0.75786667998157253301 0.32162951521938276667 -0.70922394792327314583 -0.11745981153597390145 0.42065723230012552758 -0.3580159900817070362 0.36739524583073918107 -1.275165246931971641 -0.29033041819363725189 -0.32276125897875374005 -0.18171218906103484003 -0.4385895759978549191 -0.107967541075601553 0.52515850503402905503 -0.33454552543910498486 0.74046429231276922334;-0.22595873771855423673 -0.63797721968981857543 -0.35978164255577610442 0.48930603443428866139 -0.019239115477186704423 1.1104565863406756776 0.0092646779858357296983 -0.31171767981606024467 -0.21420285890778134608 0.85049540532082401612 0.54527627187890337357 -0.62663295919604122819 -0.15382490644366358934 -1.0289075409896630831 -0.074663375977653045901 -0.23658101398124459225;-0.90389473311815271561 -1.4085449577591893089 -0.85970715670350672521 1.9717507490630961087 0.67292958290145599154 -0.58464843542942523946 -0.10011394423261195386 -0.28581908072726658343 0.59415650024861033085 1.7321211418888458056 0.82348502662450462353 -1.9519302290027218394 -1.4468903469835876496 1.1287462424547176632 0.02706408921943253762 1.3133624616355368264;0.28359313237681194053 0.5159242005732624925 0.14034874648026821053 -0.11788215572395915887 -0.078900465316157186724 -1.216150403832879201 -0.61995002467325310835 0.65034718754583697997 0.22322564894413088332 -0.50945250774600936428 -0.41768165190577288826 -0.35901869953021398052 0.32965285964040419442 1.2170595170183526879 0.51014410516291153197 0.1052275536290987884;0.40642101041639705494 0.44676166909533926441 0.31755948213254797663 -0.95754133904478677675 -0.39761094473355035328 0.9798619003646312775 0.3332120573899492455 -0.047817561911449021905 -0.17443618716560682635 -0.55301621074538631628 -0.38988350115950531904 0.90675268211571935506 0.68136704687817994941 -1.0701077569630839115 -0.14820480717828504735 -0.50455414891264904753];
IW1_2 = [0.72451559499907747242 1.1708303344714481309 0.27832948991640699132 -0.22244492784811403796 -0.066285157980397135802 -0.36682319197534013488;0.8276618461818959771 -1.333344957910758577 1.0994072791948223955 0.27605251552738196974 1.6348491878575048819 -1.2685174796215497039;1.3786283727211077199 -0.41857100328802127054 -0.21360698829596291848 -1.6369867453672517499 0.52578682430040046825 0.082908552606185126344;-0.8613476279300915639 0.093974175574433715941 -0.11419805258737687759 0.82847665689727245653 -0.23121540120056427448 0.01233614597473284627;-3.6744772630817728043 2.1510919286839045306 -1.2608476029437420962 2.9902887426800108805 -1.8519915480088542381 1.5107351424230155423;-0.08353269458341833209 2.982887814518027092 0.37901652773183891476 -0.81874154068186766331 -2.4036657873734816881 0.25999921281482102353;-2.196682413841673398 -0.44254557472620231762 1.7855885316740258695 1.8404955302815264595 0.19096416118240200355 -0.75388054666796777692;-1.6813812744830016754 -0.88221340070070042305 -1.8993411663980290793 0.71854139488895840682 -0.60530321557273247812 1.4086818471301210121;1.7076306031453873935 1.4701028684277945846 -2.6398009710381544757 -1.0433436253635139934 -1.1525583869275568549 1.5259958658526020514;0.63115274944747834507 0.017091429999489274327 1.3724799115612167366 -0.22523800324171114329 0.57565517056475146163 -0.91704474491564380578];

% Layer 2
b2 = [-0.77842968983386873205;-1.0621375904865324458;-0.69677131538348568984];
LW2_1 = [0.0048186589090799189505 -1.0990934942961299026 -2.0629628806775466288 -1.4119344590886167001 -0.46780516308574926487 -0.68402379669852020339 -0.92769150910864184301 1.1178564173903673407 0.24821010836309903569 3.0972380685911171661;2.6756915302796926426 1.5209724342167867395 2.1556114778647144092 -0.3736076448941201833 0.3482227169878295836 0.6411873107020882312 2.1138019154200091698 2.0874048061860435155 1.3436315955252700061 1.1014599579770489868;1.0364722357870854719 0.26947547543190586428 -0.72977091290569284787 -2.9217978408595990381 -0.16461341436002288607 0.16679777422614841531 0.9904854275693020238 1.150531314529678717 0.17519387729287208555 0.95838003270305949233];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = [0.0354831019441904;0.0354391208186784;0.0438105743716592];
y1_step1.xoffset = [-4.60253906;4.59144283;12.2107028];

% ===== SIMULATION ========

% Dimensions
TS = size(x1,2); % timesteps

% Input 1 Delay States
xd1 = mapminmax_apply(xi1,x1_step1);
xd1 = [xd1 zeros(8,1)];

% Input 2 Delay States
xd2 = mapminmax_apply(xi2,x2_step1);
xd2 = [xd2 zeros(3,1)];

% Allocate Outputs
y1 = zeros(3,TS);

% Time loop
for ts=1:TS

      % Rotating delay state position
      xdts = mod(ts+1,3)+1;
    
    % Input 1
    xd1(:,xdts) = mapminmax_apply(x1(:,ts),x1_step1);
    
    % Input 2
    xd2(:,xdts) = mapminmax_apply(x2(:,ts),x2_step1);
    
    % Layer 1
    tapdelay1 = reshape(xd1(:,mod(xdts-[1 2]-1,3)+1),16,1);
    tapdelay2 = reshape(xd2(:,mod(xdts-[1 2]-1,3)+1),6,1);
    a1 = tansig_apply(b1 + IW1_1*tapdelay1 + IW1_2*tapdelay2);
    
    % Layer 2
    a2 = b2 + LW2_1*a1;
    
    % Output 1
    y1(:,ts) = mapminmax_reverse(a2,y1_step1);
end

% Final delay states
finalxts = TS+(1: 2);
xits = finalxts(finalxts<=2);
xts = finalxts(finalxts>2)-2;
xf1 = [xi1(:,xits) x1(:,xts)];
xf2 = [xi2(:,xits) x2(:,xts)];
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
  y = bsxfun(@minus,x,settings.xoffset);
  y = bsxfun(@times,y,settings.gain);
  y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
  x = bsxfun(@minus,y,settings.ymin);
  x = bsxfun(@rdivide,x,settings.gain);
  x = bsxfun(@plus,x,settings.xoffset);
end
