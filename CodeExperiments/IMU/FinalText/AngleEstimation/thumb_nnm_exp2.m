function [y1,xf1,xf2] = thumb_nnm_exp2(x1,x2,xi1,xi2)
%THUMB_NNM_EXP2 neural network simulation function.
%
% Auto-generated by MATLAB, 27-Aug-2019 18:23:33.
% 
% [y1,xf1,xf2] = thumb_nnm_exp2(x1,x2,xi1,xi2) takes these arguments:
%   x1 = 8xTS matrix, input #1
%   x2 = 3xTS matrix, input #2
%   xi1 = 8x2 matrix, initial 2 delay states for input #1.
%   xi2 = 3x2 matrix, initial 2 delay states for input #2.
% and returns:
%   y1 = 3xTS matrix, output #1
%   xf1 = 8x2 matrix, final 2 delay states for input #1.
%   xf2 = 3x2 matrix, final 2 delay states for input #2.
% where TS is the number of timesteps.

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [0.1659;-0.1251;0.8816;0.0693;0.2291;-0.1934;0.7599;0.1397];
x1_step1.gain = [8.058017727639;5.86682311528307;25.706940874036;7.71902740254728;6.52741514360313;5.92592592592593;11.1731843575419;5.29941706412295];
x1_step1.ymin = -1;

% Input 2
x2_step1.xoffset = [-4.60253906;4.59144283;12.2107028];
x2_step1.gain = [0.0354831019441904;0.0354391208186784;0.0438105743716592];
x2_step1.ymin = -1;

% Layer 1
b1 = [-0.11208857653393855536;-1.0967710293087042928;0.5416900655920530161;-0.14602995575097227343;0.047690681288460039233;0.82667936255148211089;0.061534761488188684242;-0.038438994415621964562;0.088498718706943785284;0.024701473663187808322];
IW1_1 = [0.04650672844174625481 -0.73859658293156105202 -0.19400274973586814631 -0.2032242562007670339 -0.21738938952412772965 -0.22819849083536503098 -0.14045927519910048065 -0.46629687426705851427 -0.20859073814183154427 1.1424681760298289745 0.38966363990432884012 0.63267980563686598838 -0.054086271324783517789 -0.0717234427495433563 -0.70530911768655002447 -0.39563502937255440317;1.3006698574620387809 -0.33232345058064405308 0.31799446988623430999 1.0210810207431553209 -0.84543436999622301187 1.0956556970990762867 -0.11774219363033795738 0.15904928467222048671 0.57249052086567897568 1.1370866509522115084 1.7010394201409004822 0.53390328324522640102 -0.4662614654668545966 -0.065860080839806434128 -0.92947024142533896107 -0.051526410895748699093;0.59154749953641050375 -0.12126941186017789476 0.99463421788585304473 1.8229234122472739443 -1.1818580185509961478 0.9559089050490010564 -0.89433443006789892227 -0.58206334555287242427 1.3549512842970714566 0.8308309855972139113 1.2616830377388750239 -0.27153847358358240704 -0.31966792457292714236 0.34239351634908582467 -0.056128367841920837056 0.76571457048972968451;0.095344654432272801792 -0.11269171533770308558 -0.84556572835029697455 -0.29535971433907276529 0.28181738730418193217 -0.069805606606324954733 0.41256987577447695736 0.17382743061999667011 -0.55512554837998562274 0.13322375396366037403 0.29764145634520577932 0.084953124223418149952 0.20199096815601810806 -0.31204381848845752501 -0.15479103190039625315 -0.064237929768610133041;0.78442755823198873077 2.710272820198061261 0.77003913414626157241 -1.4586425686030137783 0.35872396476816065247 1.6728567221561860823 2.6521339711509859249 -0.14956566999973069931 -0.33464108388820995588 -3.2503869593303607033 -2.0321477423990756961 -0.21229800459926750911 -0.25628555621236337458 -0.42261795607372165673 -1.0514093357969735987 2.459787358675190827;-0.58464581344345023517 0.44884361933919558751 0.099715781731575164892 -0.15140472081170358587 0.19140823585910346494 -0.67538644444038442582 -0.23626017785172148677 -0.44242757028465118374 -0.25203702329982752284 -0.83168901091468605546 -0.92212152039563921591 -0.52735263368662477212 0.36418599172463023139 0.24508200655888354169 0.78524132504143284716 0.38895323435953010893;0.19519845806194396909 -0.47446138433602180751 0.71917021556774973767 -0.035473321342428601466 0.21841781546289412708 0.69526593783602563814 0.06085710123647190134 0.59413313869532713429 0.19364462771913140693 0.42697501937850784737 -0.66039912835589964502 -0.29629490048501000432 -0.70557670028645791405 0.0089050402235459121675 -0.17070516599910204314 -0.13264103420372072573;-0.17851549774665767534 0.45361371552733609214 -0.68380214807745987038 -0.11876362120323781524 -0.061950554741056249042 -0.30996746513206141493 0.15149013978745909381 -0.060723012728563813267 -0.012124624346548693032 -0.4928086928058306726 0.67079783728791020359 0.40179836261436274736 0.55007609862811801538 -0.27612113929349441088 0.060628235927384956094 -0.17684679537686920359;-0.63444117312065662073 0.78471571519546967632 0.86729930026905943663 -0.20646184490019059421 -0.30602232871339796194 -0.11412322587770847016 -0.21196102009149872525 0.37030042723525274928 1.3055780043560090142 -1.0229163066704085594 0.04575322091378011824 0.80430125981168276716 -0.070223934353064426661 0.18911359969649030321 -0.10240926508110176352 -0.90422131282602269398;-0.10830967602536861749 -1.0557750122028444206 -0.16590374534337251622 -0.70875161905124306472 0.026397988735291259138 -0.40411359947686253946 0.0047706992350270071776 -0.39998258986236734369 -0.69499348769641144941 1.3773545747386126692 -0.34599091430869055586 0.58808832905952435066 -0.1483407297681387238 -0.026495205481219200744 -0.81519192075960300592 -0.58844922164959789779];
IW1_2 = [-0.67736451904879824149 0.70964925170141524013 0.39586772280417203973 0.57898200146940359545 -0.56121865392090775071 -0.10036071326774635704;-3.6965333394311596926 -1.4346868547335003274 0.31026951762657989375 3.0834046502799230538 0.48843260360628937278 -0.044693619196881126387;-3.6765623922216716934 -2.7285270286278899832 0.3070322853852383016 2.8189213977315583648 1.3478069466947366628 0.13680286035299610292;1.2118028300027137156 1.1892421636881409519 -1.7476607954929050948 -0.94784791256205636056 -0.79145234849143342171 1.5127184262266704096;-6.480377390094242962 1.5786027895025416257 -1.7713388720818465938 6.0359098600982514782 -0.55322637480805836319 1.8088789833666325535;1.5652819980041752235 0.30991279513792480138 -0.39196025742138745906 -1.2671255606644047376 0.024128242782160774782 0.3067045849827803039;-1.2073004769258199875 -0.61821528108582135541 2.3380453159222174264 0.7536290937236971299 0.5277883121155385604 -2.1058840619128051941;0.90506567482335442687 0.30333114146945300282 -1.0078677059995755361 -0.64060468094656664029 -0.22731724566678379595 1.179284406941615293;-0.38316288868850900684 -1.2051618146858900094 2.629894564488134634 0.80185140534904153498 1.0973298504568680389 -2.5896595148212027127;0.18607826044767802887 1.2345261803979215021 1.1907279453115029444 0.20844824705793690844 -0.84496766736364381511 -0.70512150052956601431];

% Layer 2
b2 = [-0.094238967215224886398;-2.398988322387627381;-0.97495011768883288461];
LW2_1 = [-2.0474166068822077236 0.54234317024741374169 0.47995988619391699581 0.87106069147175846368 -0.13469833353502189133 0.33580745009420781555 -0.3723004388898331074 -0.16310362447038309619 0.36692498688846958421 1.4397446457200182568;2.5376509322907461197 2.1288753857742097608 0.91565855912413807172 4.6541060145104236057 0.11710493554123992122 6.4069034507546938073 2.4169395231569064109 0.028491318571317026526 1.3928774076207974808 -1.1242389344659629025;-0.17518058017807122684 0.96438787795187774776 0.45145808429685230223 0.56404209967049445673 0.00018501128983206796726 2.2569508541156997339 1.720537169431374025 1.9572692588877418363 0.096487036395840955483 0.6066029145715774451];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = [0.0354831019441904;0.0354391208186784;0.0438105743716592];
y1_step1.xoffset = [-4.60253906;4.59144283;12.2107028];

% ===== SIMULATION ========

% Dimensions
TS = size(x1,2); % timesteps

% Input 1 Delay States
xd1 = mapminmax_apply(xi1,x1_step1);
xd1 = [xd1 zeros(8,1)];

% Input 2 Delay States
xd2 = mapminmax_apply(xi2,x2_step1);
xd2 = [xd2 zeros(3,1)];

% Allocate Outputs
y1 = zeros(3,TS);

% Time loop
for ts=1:TS

      % Rotating delay state position
      xdts = mod(ts+1,3)+1;
    
    % Input 1
    xd1(:,xdts) = mapminmax_apply(x1(:,ts),x1_step1);
    
    % Input 2
    xd2(:,xdts) = mapminmax_apply(x2(:,ts),x2_step1);
    
    % Layer 1
    tapdelay1 = reshape(xd1(:,mod(xdts-[1 2]-1,3)+1),16,1);
    tapdelay2 = reshape(xd2(:,mod(xdts-[1 2]-1,3)+1),6,1);
    a1 = tansig_apply(b1 + IW1_1*tapdelay1 + IW1_2*tapdelay2);
    
    % Layer 2
    a2 = b2 + LW2_1*a1;
    
    % Output 1
    y1(:,ts) = mapminmax_reverse(a2,y1_step1);
end

% Final delay states
finalxts = TS+(1: 2);
xits = finalxts(finalxts<=2);
xts = finalxts(finalxts>2)-2;
xf1 = [xi1(:,xits) x1(:,xts)];
xf2 = [xi2(:,xits) x2(:,xts)];
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
  y = bsxfun(@minus,x,settings.xoffset);
  y = bsxfun(@times,y,settings.gain);
  y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
  x = bsxfun(@minus,y,settings.ymin);
  x = bsxfun(@rdivide,x,settings.gain);
  x = bsxfun(@plus,x,settings.xoffset);
end
