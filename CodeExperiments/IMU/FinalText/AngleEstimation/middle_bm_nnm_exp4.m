function [y1,xf1,xf2] = middle_bm_nnm_exp4(x1,x2,xi1,xi2)
%MIDDLE_BM_NNM_EXP4 neural network simulation function.
%
% Auto-generated by MATLAB, 13-Sep-2019 15:03:55.
% 
% [y1,xf1,xf2] = middle_bm_nnm_exp4(x1,x2,xi1,xi2) takes these arguments:
%   x1 = 4xTS matrix, input #1
%   x2 = 3xTS matrix, input #2
%   xi1 = 4x2 matrix, initial 2 delay states for input #1.
%   xi2 = 3x2 matrix, initial 2 delay states for input #2.
% and returns:
%   y1 = 3xTS matrix, output #1
%   xf1 = 4x2 matrix, final 2 delay states for input #1.
%   xf2 = 3x2 matrix, final 2 delay states for input #2.
% where TS is the number of timesteps.

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [-0.409771644189748;-0.338406207201333;-0.203058649071918;-0.16419875262578];
x1_step1.gain = [2.27990427281999;3.24512785081417;4.34636578207219;6.30741808504808];
x1_step1.ymin = -1;

% Input 2
x2_step1.xoffset = [-34.05729511;-56.20691974;-10.00403908];
x2_step1.gain = [0.0211267846895733;0.0395706711489379;0.0871775967713017];
x2_step1.ymin = -1;

% Layer 1
b1 = [0.47275900009844445959;-0.92606190841895696941;-0.17103766733975783731;-0.62949919110848251425;-2.0604398136660933005;0.5446726804675198208];
IW1_1 = [0.0032358370481191055766 0.16865400797232499297 0.073203985578625174746 0.12368366317293232048 0.00034396890898325178411 -0.17257456343230528906 -0.039114357214824285736 -0.10162876155028265079;-1.4394569840879118949 -0.4810774003939424226 0.43776385209481200045 1.0053999691071049405 1.0816388094495528183 -1.1587424398625270072 -0.51895185234799368068 -0.11929102843835226455;-0.21083182236100292406 0.19712729576580609314 0.99711636431133132685 0.12460825220272134239 0.43731673314628410898 -0.45175641891966789032 -0.77016474151837810425 -0.011307729388225943451;0.0074237928507484155297 0.03247229612700446022 -0.034898853495676694647 -0.020195049533333359754 0.027272688491086227031 0.022453608688790292064 0.036307029233419690906 0.002985627264178775022;-1.9555055778484045081 -1.581711158694422803 1.6222121298893525942 -0.56420319815040542721 2.7893552064453328576 0.70591811861258524363 -2.1416057853606838002 0.46365850756061244287;-0.052471452685883303302 -0.067414065411507476111 -0.15052819218271273893 -0.03007393832975443354 0.0021337199513874762456 0.047395332641275947361 0.032403411631070209997 0.024746776509273513828];
IW1_2 = [0.018381174229724236285 -0.22122199926825711347 -0.34572137631452959372 0.17543151214527977211 0.12399497145724013014 0.09992775438015730205;-0.95448961406658261453 -3.669368119452561583 3.2020787301536692837 0.98460108479425600958 2.3165136033501290136 -1.6810012009033501457;-3.1977271320663311904 -0.9628503662110029504 0.6720242244708222179 2.9726413923146628449 0.92232344764219509337 -0.21685922019841416541;0.13675517435010647871 -0.49060974991873124162 0.37446505714787436947 -0.12734597539215608553 0.20172588059954899009 -0.18967756865847285042;3.3103130341121151936 -0.8455037021811707687 0.8109568124910568887 -3.6120017948511855543 -1.2392717540758526606 -0.47332756487611121754;-0.65218295276111026837 0.40296271255165733161 -0.3746993987934473247 -0.29575067156977874472 -0.50209707065521791414 0.1192687292651536668];

% Layer 2
b2 = [1.9347448418387327429;-0.67719849442528623484;-1.5442253512016088646;-1.8872136090070843473;-0.14029115069703840257;5.1007712524697153;-0.96838322452871217205;-0.7962655000291252172];
LW2_1 = [-0.028754612773084917837 -0.18010908207349779486 0.077965173320736963491 -0.84694112109326658011 2.1641294581129502106 -0.42093034126122669258;-1.4147113001775684094 -3.6158309195305227135 4.3036619676721636907 2.9184647752819965483 0.89893666523674264912 -3.1308833660093924323;-1.6296938301328607324 -3.1127706271354145251 3.5505232400802806403 3.0082529043454564466 0.0012056158744597781848 -2.6863070430698026136;-0.065908124473317244996 1.1818256793574157815 -2.3570865032053154309 -0.39695577987529950814 -2.2940404283793855988 -1.1017161889204407643;0.11974917939830166669 -0.032355400417286857284 -0.026328425337844321014 -1.5917493702730771687 1.2660913818866168512 0.098936164491108646857;0.075558364077034589901 0.31818164529223685877 -0.37613330237336767281 0.10680664817517386556 -0.47292240264071505607 -5.1539409636404016624;0.082178550919524362417 0.047718764379907373241 -0.10615135653659030224 0.88150780978173748359 -1.9750979839452098563 -0.69468065502977338621;1.3311289898882765481 -0.021835507086653247605 -0.095006867311764220396 -0.14620775538148919614 0.13380907647480594358 -0.052614625480528927348];

% Layer 3
b3 = [-3.353905022725099272;0.17246366269229515544;-1.1361729096750976531];
LW3_2 = [1.076244507284487284 1.366284984177416284 -3.5851137215286805748 0.26690814276540464345 -0.11605299959960518885 0.95047170304103245631 0.53551766265724831673 0.32065022402231518894;-0.2937470979190299758 0.096304697343749925964 -0.23520213419023300316 -0.061762100883493931125 3.8285504068972566749 0.3245933429474422427 1.6122667563880763719 -1.9552946346876758366;0.7333844326477355624 -0.24488942634017085709 0.6650425786750419066 0.1020990141991203054 -0.9362551313992488744 0.51735904727282100435 0.29021005318229031733 -2.3041664352931823245];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = [0.0211267846895733;0.0395706711489379;0.0871775967713017];
y1_step1.xoffset = [-34.05729511;-56.20691974;-10.00403908];

% ===== SIMULATION ========

% Dimensions
TS = size(x1,2); % timesteps

% Input 1 Delay States
xd1 = mapminmax_apply(xi1,x1_step1);
xd1 = [xd1 zeros(4,1)];

% Input 2 Delay States
xd2 = mapminmax_apply(xi2,x2_step1);
xd2 = [xd2 zeros(3,1)];

% Allocate Outputs
y1 = zeros(3,TS);

% Time loop
for ts=1:TS

      % Rotating delay state position
      xdts = mod(ts+1,3)+1;
    
    % Input 1
    xd1(:,xdts) = mapminmax_apply(x1(:,ts),x1_step1);
    
    % Input 2
    xd2(:,xdts) = mapminmax_apply(x2(:,ts),x2_step1);
    
    % Layer 1
    tapdelay1 = reshape(xd1(:,mod(xdts-[1 2]-1,3)+1),8,1);
    tapdelay2 = reshape(xd2(:,mod(xdts-[1 2]-1,3)+1),6,1);
    a1 = tansig_apply(b1 + IW1_1*tapdelay1 + IW1_2*tapdelay2);
    
    % Layer 2
    a2 = tansig_apply(b2 + LW2_1*a1);
    
    % Layer 3
    a3 = b3 + LW3_2*a2;
    
    % Output 1
    y1(:,ts) = mapminmax_reverse(a3,y1_step1);
end

% Final delay states
finalxts = TS+(1: 2);
xits = finalxts(finalxts<=2);
xts = finalxts(finalxts>2)-2;
xf1 = [xi1(:,xits) x1(:,xts)];
xf2 = [xi2(:,xits) x2(:,xts)];
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
  y = bsxfun(@minus,x,settings.xoffset);
  y = bsxfun(@times,y,settings.gain);
  y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
  x = bsxfun(@minus,y,settings.ymin);
  x = bsxfun(@rdivide,x,settings.gain);
  x = bsxfun(@plus,x,settings.xoffset);
end
