function [y1,xf1,xf2] = index_bm_nnm_exp2(x1,x2,xi1,xi2)
%INDEX_BM_NNM_EXP2 neural network simulation function.
%
% Auto-generated by MATLAB, 27-Aug-2019 18:45:51.
% 
% [y1,xf1,xf2] = index_bm_nnm_exp2(x1,x2,xi1,xi2) takes these arguments:
%   x1 = 8xTS matrix, input #1
%   x2 = 3xTS matrix, input #2
%   xi1 = 8x2 matrix, initial 2 delay states for input #1.
%   xi2 = 3x2 matrix, initial 2 delay states for input #2.
% and returns:
%   y1 = 3xTS matrix, output #1
%   xf1 = 8x2 matrix, final 2 delay states for input #1.
%   xf2 = 3x2 matrix, final 2 delay states for input #2.
% where TS is the number of timesteps.

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [-0.1815;-0.1351;0.7194;0.2933;-0.2095;0.1824;0.7935;0.0363];
x1_step1.gain = [6.11620795107034;9.71817298347911;8.56164383561644;5.03018108651912;5.87026709715292;9.21234454168586;11.4744693057946;4.27441761060056];
x1_step1.ymin = -1;

% Input 2
x2_step1.xoffset = [-34.22038887;-54.61491337;-33.15052065];
x2_step1.gain = [0.0202971975872209;0.0423350850978253;0.0363858278153968];
x2_step1.ymin = -1;

% Layer 1
b1 = [0.14632939518413659585;-0.13052708797572937227;-0.24358416189621784342;-0.028352585955493166819;0.074645502592541490561];
IW1_1 = [-0.17940480889814655607 0.035118918687869898898 -0.1423167563366460886 0.036860102399216686242 0.17490297857434675133 0.17794059003120404894 0.072383471077677799532 0.043450676431330173544 0.079793583965820355508 -0.02662596522661146714 -0.063415794131490579866 -0.20382090477549894003 -0.047135181880039359048 -0.12763323956957373095 0.056157133634904932151 -0.010900440889819737814;0.87905707481858696983 0.0122533183848676612 0.7629502724148136128 0.15719398757646108056 -0.48165088189500532279 -0.83810096334051897848 -0.33924650014895840755 -0.27440442791442137827 -0.3078799058681997991 0.061580022519079354038 -0.059516703308981601384 0.36764235377138593241 0.096192467815513271745 0.53407735771528586088 -0.19386932059111844362 0.10300500547929919426;-0.59409796860826780129 -0.61565669972030445667 -0.060002439052402524455 -0.24044419402712732814 -0.46542981518083176296 0.48405443460687014312 -0.22237795953522124237 -0.33637070485745140802 0.1248654482574620278 0.58813892966512582028 -0.5599772621894102409 -0.2938659715070311429 0.53712834258310560021 -0.45950429615567200958 0.58623821014361454651 0.63393627889643910933;0.4759854530676643769 -0.30043561526270606832 0.6664287719330276305 -0.18759716159923062184 -0.69618469984345743296 -0.36186524149012694318 -0.10147016136018671695 -0.19021915400551034359 -0.1908682612739804052 0.27369488915835882281 -0.25948445025983724044 0.42785481881157094719 0.44453803132237501572 0.19583328111227132906 -0.13497063607865505963 0.19723711634095678069;0.20978748343587483305 -0.40578145301598567141 0.43497590981737993543 -0.3415075068092178201 -0.63533700390570091443 -0.268073224966445256 -0.20732507372434183512 -0.25904929210186600219 -0.039082974405529505302 0.35580591121935134513 -0.1219266406935224506 0.5097651162432005334 0.49349746708145825203 0.15640031914577157135 0.021608597067995654467 0.26919787647132664699];
IW1_2 = [-0.20380383487478065385 -0.32040592625455643905 -0.67814205267086080653 0.15552231974196864539 0.01571629517859928285 0.201236914602253264;-0.37514213233477361475 -0.0038997603003738095379 -0.46591518015604921343 -0.37507503331213581932 0.36681048756604062167 0.018931071080066513151;1.9805911738548358514 0.26524097069566110463 -1.9799331717603798619 -1.4439788762506833297 -0.2045373720277670615 1.5621129901246857408;0.78549341194588451209 -0.38824008636593376753 -0.11970853891573564332 -1.191284972235380657 0.44139598087529124948 0.16882979493667260584;1.7287618553980936831 -0.72847634943554129272 -0.064107310964695546351 -1.5745937678600596676 0.54299830785398073285 0.16546980738556207879];

% Layer 2
b2 = [0.042378885434357763118;0.50542977627925023132;-0.090885823071813906515];
LW2_1 = [-0.55220565416987565932 0.72847013810165517356 0.26546265520590478504 -2.3132495586022625567 1.9407002319717125971;-1.1398951391758334051 0.67151143543083369192 0.75307132410449717508 -0.33095945890009631496 -0.84185834433908246499;-0.95601339530646345377 -0.98074108111483693229 -0.48306961571309386949 1.03798339176877219 -0.34747816897797728641];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = [0.0202971975872209;0.0423350850978253;0.0363858278153968];
y1_step1.xoffset = [-34.22038887;-54.61491337;-33.15052065];

% ===== SIMULATION ========

% Dimensions
TS = size(x1,2); % timesteps

% Input 1 Delay States
xd1 = mapminmax_apply(xi1,x1_step1);
xd1 = [xd1 zeros(8,1)];

% Input 2 Delay States
xd2 = mapminmax_apply(xi2,x2_step1);
xd2 = [xd2 zeros(3,1)];

% Allocate Outputs
y1 = zeros(3,TS);

% Time loop
for ts=1:TS

      % Rotating delay state position
      xdts = mod(ts+1,3)+1;
    
    % Input 1
    xd1(:,xdts) = mapminmax_apply(x1(:,ts),x1_step1);
    
    % Input 2
    xd2(:,xdts) = mapminmax_apply(x2(:,ts),x2_step1);
    
    % Layer 1
    tapdelay1 = reshape(xd1(:,mod(xdts-[1 2]-1,3)+1),16,1);
    tapdelay2 = reshape(xd2(:,mod(xdts-[1 2]-1,3)+1),6,1);
    a1 = tansig_apply(b1 + IW1_1*tapdelay1 + IW1_2*tapdelay2);
    
    % Layer 2
    a2 = b2 + LW2_1*a1;
    
    % Output 1
    y1(:,ts) = mapminmax_reverse(a2,y1_step1);
end

% Final delay states
finalxts = TS+(1: 2);
xits = finalxts(finalxts<=2);
xts = finalxts(finalxts>2)-2;
xf1 = [xi1(:,xits) x1(:,xts)];
xf2 = [xi2(:,xits) x2(:,xts)];
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
  y = bsxfun(@minus,x,settings.xoffset);
  y = bsxfun(@times,y,settings.gain);
  y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
  x = bsxfun(@minus,y,settings.ymin);
  x = bsxfun(@rdivide,x,settings.gain);
  x = bsxfun(@plus,x,settings.xoffset);
end
