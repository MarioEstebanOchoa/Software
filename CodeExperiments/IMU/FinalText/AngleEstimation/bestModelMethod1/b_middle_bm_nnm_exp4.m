function [y1,xf1,xf2] = middle_bm_nnm_exp4(x1,x2,xi1,xi2)
%MIDDLE_BM_NNM_EXP4 neural network simulation function.
%
% Auto-generated by MATLAB, 12-Sep-2019 20:50:52.
% 
% [y1,xf1,xf2] = middle_bm_nnm_exp4(x1,x2,xi1,xi2) takes these arguments:
%   x1 = 16xTS matrix, input #1
%   x2 = 3xTS matrix, input #2
%   xi1 = 16x2 matrix, initial 2 delay states for input #1.
%   xi2 = 3x2 matrix, initial 2 delay states for input #2.
% and returns:
%   y1 = 3xTS matrix, output #1
%   xf1 = 16x2 matrix, final 2 delay states for input #1.
%   xf2 = 3x2 matrix, final 2 delay states for input #2.
% where TS is the number of timesteps.

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [-0.2872;-0.1512;0.736;0.3377;-0.3962;0.0385;0.5888;0.3788;-0.3399;0.0772;0.8158;-0.3435;-0.2594;-0.0021;0.877;0.18];
x1_step1.gain = [6.46412411118293;7.58725341426404;9.92063492063492;6.25978090766823;6.6511473229132;9.68992248062015;6.83526999316473;5.94530321046374;4.53720508166969;7.01016473887136;11.7508813160987;2.26449275362319;6.91802144586648;11.2170499158721;20.9643605870021;7.35023888276369];
x1_step1.ymin = -1;

% Input 2
x2_step1.xoffset = [-39.50838032;-56.20691974;-13.03478832];
x2_step1.gain = [0.0195047175707841;0.0395706711489379;0.0539272120771512];
x2_step1.ymin = -1;

% Layer 1
b1 = [-0.069542397509624889751;0.69956176716424711692;0.076717777159898609129;-0.063488890984366080916;-0.18586147770299157878;-1.4021203751893256406];
IW1_1 = [0.0029335196008532129879 0.034459490746743322298 0.03992043672225097789 0.047482853543930315932 0.0036606165120986991664 0.0025515342170809645825 -0.044544473801027086035 -0.067515215732957989392 -0.01153938606540631101 -0.040473294963097788957 -0.0043038829162434927289 -0.01397579153655408718 -0.05516469296347162321 -0.056033168734208181616 0.022264298703409856478 0.042753510298688006397 -0.00049571508869764046613 -0.034276725945207607571 -0.046625916235470805937 -0.048829990035867125442 0.0031516024075209335409 0.0024203721602189904802 0.00015584711303194269286 0.033083869825103778828 -0.0035884925289543893878 0.029850380453889442667 -0.0019981015941255854916 0.0049506345652356184908 0.035661060516351664185 0.068943506607605495318 0.0042498033662402116828 -0.016146900023299031596;-0.97718591777204921733 0.94838448380210149669 0.69890541131748940007 -0.2196142756129026985 -1.6250876668936631297 -0.025056609126295772971 -0.34104713343400794301 -0.053208438897843580995 -1.9999251995204163634 -0.40065043286739965289 -1.0759183659230779906 1.3173239164447576588 -1.3570679758058032949 -0.50779794629256425065 -1.8252954816223032619 -0.66344264615224513015 2.5200714917247335478 -0.064319513516175028101 0.10396772203422327552 0.50683907933922645039 1.9682133402748160922 0.19341248358059678902 -0.016222860642350411114 1.9697406862421142915 0.02467517977627924422 0.74772303625408464978 1.7398846029242052147 1.3591046693371542364 2.2866380926582552391 0.039696688946358991978 0.12504058588821573283 -2.161371110448501387;-0.020986906702361661503 -0.12765269508051496627 0.036710940137057182509 0.030314820649191581703 -0.35028771801932317986 0.14173164729753645608 0.2295029738596428559 0.086965363006062418316 -0.093092894019102576109 -0.049958575038911511024 0.031744204103475191781 -0.034699530611218477871 0.079982421962792829562 0.067764561106314666339 -0.20016990381047114478 -0.23009975799808252139 0.026997670676971657205 0.13864813192486302729 -0.018678669377324111367 0.0056807175575548608457 0.31839135821795472303 -0.098176891501785282235 -0.080281988796433959021 0.094239571281331452335 0.07494050472742093405 0.067667441332981886903 0.00013960178517047244274 0.076947246405200786512 -0.17054031748130799029 -0.12447402977817421943 0.073600488027712768213 0.077824818861675207349;-0.060888082478041297141 0.10724457863455255646 -0.19275421233251638364 -0.14685840454010054557 0.37453958708847268078 -0.17499326833028500117 -0.0094780248860844035913 0.019514933099108251052 0.22937348591717410251 0.19919400581513219128 0.02754803551045763646 0.012129050616870801563 -0.0032729068652035094369 -0.15820363459339550904 -0.046404487248825565526 0.14394895930625506431 0.012742528214333958061 -0.12229103183995729265 0.20984982464534465696 0.12223895200799847482 -0.36051908592139081389 0.10676812858379508553 -0.04084685097131106335 -0.193616970609142236 -0.13625606467176268333 -0.18281220937484696232 -0.043296276754309720447 -0.097243727333557808401 0.09306352568925371771 0.17189524364907959875 0.17236551495880886309 0.072898286365617001592;0.038444130988307192998 0.71148715446748189706 -0.0076544153791896262298 0.15497418200064025373 0.925237512047964894 -0.3757254833411690087 -0.16945985989054324072 0.37636526928971714145 0.75000383377311952149 0.48955209011442024636 0.029682055838810821741 0.11305899857533802111 -0.34727807390757209349 -1.1399268921712504277 -0.079043894560593866427 0.43597901298545127524 -0.059572756956895157876 -0.70456426049074982743 -0.0068653555883591982356 -0.28072631761836064346 -0.87040852081969766196 0.20773023952533226089 -0.20461056928748957984 -0.88765615269711639623 -0.58042348101006568939 -0.52106492749773314355 -0.076416714672037783229 -0.21083012339828194337 0.57816311819817411966 1.3362039662682858587 0.54295553591222711631 0.12249593461197427757;-0.23918524102045923829 -0.069245520973850852031 -0.83527782680505724411 0.082600521997093293014 3.2179327386489888774 -0.60479303968581132889 -1.9388515880295571492 1.7051370125268916489 0.82211901648162366563 0.5862540729884122559 -0.15477487900666947462 1.1452109608336806801 -0.72406191780304085537 -0.46165167512346100276 0.80280556299569527656 -1.0574057409323946999 -0.11191768928693525409 -0.04318831781097708794 1.4576493105195658107 0.35334187512175774248 -3.1579044017346751261 0.36250137501616719327 1.1028772594023048548 -3.3602826160351719764 -0.64550582047618831893 -0.76568152910688014323 -0.089163471710324529451 -1.5345408757705185643 1.5376987757537345924 0.73440718853620212681 -0.24983768066863659696 2.2191985398202915825];
IW1_2 = [0.1396644685037699285 0.32767278065395882836 -0.15822876237911612241 -0.055246667637913783599 -0.13383831503775633909 0.11190119237358943372;-3.4341092157674109053 2.9069485209745544729 -2.5194577082976921112 0.76971395347274784715 -0.77364247537755737039 2.0160833588448459075;0.015106494715895538855 0.18813067213378825704 0.42440371160781503734 -0.34566050844918111418 -0.10757440292833843343 -0.24899066206515552135;-0.37253187086769423697 -0.27853298186384140012 0.52028111851116887188 0.61561152696114407323 0.16501638189816369984 -0.11383294084424815107;-3.3336965153604332102 1.152971593233970804 -0.73810554750459933526 3.1465418295181790675 -0.55049420189864650688 0.95480578269257454505;-2.3135091819711908201 -1.2593803588417840089 0.47123980390029313048 3.214585330531814833 1.5154257976499003746 -0.22392561684257952792];

% Layer 2
b2 = [1.1588726242510114517;0.74038293695321155674;-1.3219683446009142802;0.55378210625038759574;1.6540804234497485936;-1.2700277077664132719;0.01612451217072591661;-0.56421674455501524825];
LW2_1 = [-0.095727266114112627426 -0.0069944217367874884569 0.21136265960681430154 -0.68845357274724228169 -0.31852887819157782445 1.5356208069760779455;-0.38123459804454434829 -1.5582996755350444484 0.30875059772435403671 -1.3482692100058442097 2.5219099479151747545 2.3904642512445448688;-0.33448723288529474962 1.2716562289554913523 0.22061275304276709019 0.43110399727506826251 -2.7776597363348694003 -2.4282366810403117618;-1.0694469481649122589 -0.51060410230500119511 0.87781082990041481295 -1.3846641155548522484 -1.2719954506814090678 -1.5585620157954589438;-1.4743054154256192145 0.001945246046961265473 0.88131350811186215388 -1.0208431320681381482 -0.096476752048733543932 2.0744309681188122241;0.24030346485853948391 -0.0087578667012665426667 -0.31481266986551126319 0.11169473223204616497 0.73620844137912733185 -2.0337108296848329658;-1.1059672551727566248 -0.012565160129501816086 -0.55283335170642322609 -0.52413402832765920714 -0.01493977295191144597 0.046460992737363357441;-1.0646158747829528313 0.6197883640622471324 0.83471396500096861626 -0.75162088138510330104 -2.5218709117160509336 -1.9707664784071237118];

% Layer 3
b3 = [0.40987888832113034132;-0.16569561862320900114;0.093622329323099079401];
LW3_2 = [1.3928342799658133266 -2.2653773920564574951 -2.5120345587975441148 -2.5850366682907650606 -2.2290526759606055229 -0.84835707744285793197 0.026729139749001245424 2.9221760635871874001;2.8717586300529789334 -0.19201448740467086385 -0.32030978468248794133 -0.083183918239369936121 -0.78332657697527585672 1.4953791419750188663 -2.237064823720161133 0.28178701680103129812;-2.3463039270965251326 0.3656572832133557216 0.75869322415901241374 0.64840497592182899655 0.83191699659446538551 -1.3821276939650251059 -1.9396569443227751339 -0.88977630574481636483];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = [0.0195047175707841;0.0395706711489379;0.0539272120771512];
y1_step1.xoffset = [-39.50838032;-56.20691974;-13.03478832];

% ===== SIMULATION ========

% Dimensions
TS = size(x1,2); % timesteps

% Input 1 Delay States
xd1 = mapminmax_apply(xi1,x1_step1);
xd1 = [xd1 zeros(16,1)];

% Input 2 Delay States
xd2 = mapminmax_apply(xi2,x2_step1);
xd2 = [xd2 zeros(3,1)];

% Allocate Outputs
y1 = zeros(3,TS);

% Time loop
for ts=1:TS

      % Rotating delay state position
      xdts = mod(ts+1,3)+1;
    
    % Input 1
    xd1(:,xdts) = mapminmax_apply(x1(:,ts),x1_step1);
    
    % Input 2
    xd2(:,xdts) = mapminmax_apply(x2(:,ts),x2_step1);
    
    % Layer 1
    tapdelay1 = reshape(xd1(:,mod(xdts-[1 2]-1,3)+1),32,1);
    tapdelay2 = reshape(xd2(:,mod(xdts-[1 2]-1,3)+1),6,1);
    a1 = tansig_apply(b1 + IW1_1*tapdelay1 + IW1_2*tapdelay2);
    
    % Layer 2
    a2 = tansig_apply(b2 + LW2_1*a1);
    
    % Layer 3
    a3 = b3 + LW3_2*a2;
    
    % Output 1
    y1(:,ts) = mapminmax_reverse(a3,y1_step1);
end

% Final delay states
finalxts = TS+(1: 2);
xits = finalxts(finalxts<=2);
xts = finalxts(finalxts>2)-2;
xf1 = [xi1(:,xits) x1(:,xts)];
xf2 = [xi2(:,xits) x2(:,xts)];
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
  y = bsxfun(@minus,x,settings.xoffset);
  y = bsxfun(@times,y,settings.gain);
  y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
  x = bsxfun(@minus,y,settings.ymin);
  x = bsxfun(@rdivide,x,settings.gain);
  x = bsxfun(@plus,x,settings.xoffset);
end
