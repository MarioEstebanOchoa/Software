function [y1,xf1,xf2] = middle_bm_nnm_exp2(x1,x2,xi1,xi2)
%MIDDLE_BM_NNM_EXP2 neural network simulation function.
%
% Auto-generated by MATLAB, 27-Aug-2019 18:45:49.
% 
% [y1,xf1,xf2] = middle_bm_nnm_exp2(x1,x2,xi1,xi2) takes these arguments:
%   x1 = 8xTS matrix, input #1
%   x2 = 3xTS matrix, input #2
%   xi1 = 8x2 matrix, initial 2 delay states for input #1.
%   xi2 = 3x2 matrix, initial 2 delay states for input #2.
% and returns:
%   y1 = 3xTS matrix, output #1
%   xf1 = 8x2 matrix, final 2 delay states for input #1.
%   xf2 = 3x2 matrix, final 2 delay states for input #2.
% where TS is the number of timesteps.

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [-0.4583;-0.1074;0.6659;0.3876;-0.4967;0.119;0.5264;0.3653];
x1_step1.gain = [7.0298769771529;6.99790062981106;8.71459694989107;7.44047619047619;9.04977375565611;8.64304235090752;6.10873549175321;6.61594442606682];
x1_step1.ymin = -1;

% Input 2
x2_step1.xoffset = [-42.35398667;-27.72971757;-11.74116906];
x2_step1.gain = [0.0198931201438839;0.0425556129037359;0.0519258024025963];
x2_step1.ymin = -1;

% Layer 1
b1 = [0.026161464157398981595;-0.26009070071420353765;-0.10736539607649391026;0.030443227953803379815;0.24818793944734371393];
IW1_1 = [0.23510438202453670664 0.089192595819012579494 0.4186419036101838298 0.45975340846229417746 0.28999704083950172961 -0.59347672320694189185 0.067959964584188584102 0.13599750360696424845 -0.32766502111892581439 -0.055387028154654474599 -0.61146973285561978528 -0.55256212304159801896 -0.1879782920505440047 0.37589109468852416329 -0.42064263616858837969 -0.51360717923016563358;-0.67319516419063007984 -0.17898793300539775353 -1.0411557936646689271 -1.8334232952215039347 -1.0452801881401971862 1.8428605948349752186 0.72458597011890835127 0.016473051188413207618 0.81629369788627459403 0.055116538656655320039 1.5890596003295636152 2.0263630962443852646 0.81839932652114155687 -1.3558511786097091623 0.15102597782584692432 1.0466349590903660793;-0.1904237441854380597 -0.1130488335965773028 -0.45157592087475734166 -0.47545991286321637181 -0.24704411174028892417 0.58410399074663121866 -0.29193892654106323725 -0.24358794837198019523 0.29108086898774682139 0.083792339462044174159 0.64910012855649046326 0.56865164485929109439 0.13894873860022030621 -0.36309603934248851909 0.6673301806166407335 0.63282982632382633881;-0.24748608455750575885 0.1199309422222969157 -0.080761336036426614737 -1.1003061132382523368 -0.68091886919306987558 0.67570456907429832238 1.9763216103614258401 0.78345668285030012346 0.12334560180584459854 -0.20087109070730649329 0.21307513336503336454 1.0707263635508070809 0.7249492838370208414 -0.71248545706876620365 -1.9991730831565988069 -0.57654972025342798858;0.40593005251667646505 0.27755549048457012207 0.58646969144322880219 0.46235632213170929639 0.27710027965170780373 -0.89167832996952922642 0.93024531138890087512 0.6245091787281137341 -0.54458856729084537118 -0.23588579549763105669 -0.87145857510933188994 -0.61607850973113054138 -0.11412038725605522238 0.58697873270093392506 -1.5676363768947745303 -1.229582249469020061];
IW1_2 = [0.46333375416832361937 -0.17869102452640564516 -0.36571973122401230105 -0.2865960765845061986 -0.13726939357159617661 0.12425863081983939962;-0.30775417559745060769 -0.098318006918218514567 -0.03289709415617970284 -0.036957438155441120486 0.36450820368532249605 0.24203692344934499281;-0.2801510260616703607 -0.24527855523956487716 0.16620414340672517994 0.23026789931553809376 0.28546826704493061255 -0.10241137393115760934;1.286890001805270467 0.29031553422399064557 -0.82454369960396056705 -1.1451290656990380512 -0.27678534395751469566 0.73743357337275550201;0.68988914031709169805 0.55037945949484001762 -1.066402969299426351 -0.51008952119369255218 -0.56221016074427576648 0.60536448727780145518];

% Layer 2
b2 = [-0.27368186562273949525;-0.40357605990155548392;0.03799421421180084607];
LW2_1 = [-2.3078633122532439259 -3.888694181064236588 6.4116361938039592161 2.8278754552128848587 -0.1725647662823873163;-3.7195824258187033529 -1.1327921343907174645 0.76580406176590631873 0.56830530123742839521 1.2800001397250171387;-1.2610602463080653468 -1.1635387825769119008 -1.8739733365606647819 1.0500673217990215136 -2.2321849370896442721];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = [0.0198931201438839;0.0425556129037359;0.0519258024025963];
y1_step1.xoffset = [-42.35398667;-27.72971757;-11.74116906];

% ===== SIMULATION ========

% Dimensions
TS = size(x1,2); % timesteps

% Input 1 Delay States
xd1 = mapminmax_apply(xi1,x1_step1);
xd1 = [xd1 zeros(8,1)];

% Input 2 Delay States
xd2 = mapminmax_apply(xi2,x2_step1);
xd2 = [xd2 zeros(3,1)];

% Allocate Outputs
y1 = zeros(3,TS);

% Time loop
for ts=1:TS

      % Rotating delay state position
      xdts = mod(ts+1,3)+1;
    
    % Input 1
    xd1(:,xdts) = mapminmax_apply(x1(:,ts),x1_step1);
    
    % Input 2
    xd2(:,xdts) = mapminmax_apply(x2(:,ts),x2_step1);
    
    % Layer 1
    tapdelay1 = reshape(xd1(:,mod(xdts-[1 2]-1,3)+1),16,1);
    tapdelay2 = reshape(xd2(:,mod(xdts-[1 2]-1,3)+1),6,1);
    a1 = tansig_apply(b1 + IW1_1*tapdelay1 + IW1_2*tapdelay2);
    
    % Layer 2
    a2 = b2 + LW2_1*a1;
    
    % Output 1
    y1(:,ts) = mapminmax_reverse(a2,y1_step1);
end

% Final delay states
finalxts = TS+(1: 2);
xits = finalxts(finalxts<=2);
xts = finalxts(finalxts>2)-2;
xf1 = [xi1(:,xits) x1(:,xts)];
xf2 = [xi2(:,xits) x2(:,xts)];
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
  y = bsxfun(@minus,x,settings.xoffset);
  y = bsxfun(@times,y,settings.gain);
  y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
  x = bsxfun(@minus,y,settings.ymin);
  x = bsxfun(@rdivide,x,settings.gain);
  x = bsxfun(@plus,x,settings.xoffset);
end
