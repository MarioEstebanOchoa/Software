function [y1,xf1,xf2] = thumb_bm_nnm_exp3(x1,x2,xi1,xi2)
%THUMB_BM_NNM_EXP3 neural network simulation function.
%
% Auto-generated by MATLAB, 27-Aug-2019 19:17:43.
% 
% [y1,xf1,xf2] = thumb_bm_nnm_exp3(x1,x2,xi1,xi2) takes these arguments:
%   x1 = 16xTS matrix, input #1
%   x2 = 3xTS matrix, input #2
%   xi1 = 16x2 matrix, initial 2 delay states for input #1.
%   xi2 = 3x2 matrix, initial 2 delay states for input #2.
% and returns:
%   y1 = 3xTS matrix, output #1
%   xf1 = 16x2 matrix, final 2 delay states for input #1.
%   xf2 = 3x2 matrix, final 2 delay states for input #2.
% where TS is the number of timesteps.

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [0.2185;0.0567;0.9076;0.0855;0.2868;-0.0432;0.7555;0.1799;-0.7201;0.0064;0.5702;0.2422;0.0864;0.1523;0.9267;0.0585];
x1_step1.gain = [12.5234815278647;11.5606936416185;45.7665903890159;16.6666666666667;7.46825989544436;10.4112441436752;11.8764845605701;7.69526741054252;5.35762121618002;6.53167864141084;8.06776926179911;6.4246707356248;11.4025085518814;17.4216027874564;43.1965442764579;23.5017626321974];
x1_step1.ymin = -1;

% Input 2
x2_step1.xoffset = [19.91904251;2.583829047;15.72255665];
x2_step1.gain = [0.0470926729892737;0.0376234231319031;0.06953254154686];
x2_step1.ymin = -1;

% Layer 1
b1 = [-0.80003544772181400813;0.71348124377836774634;0.15511292085163599919;-0.10381967527195987144;0.063269387691918393957];
IW1_1 = [0.20347166607347536016 -0.65257666923078405663 -0.0068777307851004328837 -0.11611542053791375217 -0.54419903011871961773 -0.20236144146090825902 -0.2825111118190388737 -0.66210488749018092669 0.42344048433915282281 0.083489324502875411627 -0.51882561837694207707 -0.12169872647184214187 -0.017761982471221997998 0.26357034323032635381 -0.23959208373988732932 0.055842845703168053628 0.045575631796677923413 0.71678650797282461582 0.12479330923146006449 0.19719699744319960089 -0.0880907095141796187 0.25065574390539469007 -0.2536158311137037269 0.093416339800084194356 -0.075714886456212854293 -0.45719888339142661371 0.078958616002923032173 0.17733255404436534808 0.27092680941048080667 -0.2891631146583529266 0.12769693769445780718 -0.41071759860615136839;0.40000415333505245918 -0.1823695777298615095 -0.10704253208682004694 0.075199985140800840178 0.25817666258983240635 -0.026784894357093295969 -0.0082897954782298922949 -0.35867373283538983575 0.043912868395425609658 -0.38891154093817609239 -0.64897636710097639234 0.087383539911588536953 0.21260667949787384612 -0.186079688947648203 -0.39431395515412082098 -0.66041042277613104527 -0.74998464081840809925 0.093144442679680805597 -0.051895722281087769412 0.0091617270827768944319 0.17851284050439639173 -0.038285323227406006796 0.21736963929399136242 0.26861797041213025805 0.16115048245146904038 -0.0090101143970225429369 0.06828618653274808048 0.1320709494448078225 -0.3731592789116719433 0.064148118715917828991 0.15208735960810820798 0.22816521689082880364;0.35494615759986797299 -0.22375697116307671775 0.059557979263925246716 0.027882817084120617435 -0.089904111418060289607 -0.31193125451118941527 -0.1547065738175778804 -0.45708661200477190834 0.18751927798493020494 -0.092107646107664420398 -0.34172188631567718131 -0.16223195211515575864 -0.14435103254342698809 0.11403135552466345248 -0.29715102441326191052 -0.11910364323190322788 -0.29805247072714446954 0.22194825875729817799 -0.024306466999130867113 -0.0039841996113178981126 -0.073624730560256104739 0.30362398672024604185 -0.034594920321414597553 0.27916152363490143173 -0.071502965162542911348 -0.10071190598591564513 0.043774277643385185732 0.19715159048181679635 0.09688150402855703891 -0.098885488777901861535 0.22231886862706906616 -0.035355059883381632913;0.10826630614330942648 -0.60298181378196025193 -0.10421486040912206206 -0.094414097289533163715 0.072093874340505306741 -0.16231889854287251396 -0.041416133743874337936 -0.41890540107244178536 0.2092943642211869959 -0.25051389096540815915 -0.54291929682131478963 -0.0081118471197807236889 -0.022818918875314158495 0.15214581108117219976 -0.14444627063132298161 -0.17815579106869172676 -0.14143186381386976813 0.56259459903106689982 0.080109850698060008911 0.14977750143375431757 -0.19652574059790681171 0.15870395211633187005 -0.11942450272112539733 0.12812017291048441447 -0.18797635855407840433 -0.036307673668329452921 0.17443405692055646838 0.22344595972421449348 0.083317268135992592071 -0.16130907227813923166 0.10969129440113052631 -0.13171948126509774868;0.19683860358220828246 0.22606659252652661074 0.13676484073948597109 0.23901405631031014121 -0.40210040990151002527 0.25713127265203505889 -0.25046525884657439009 -0.10989813328175571105 0.24007477292015269588 0.27328009005809456022 0.21086997510573080028 -0.13490806013581313483 -0.15720763593661774005 -0.11762816491437448618 -0.026283045511051223581 0.29832825123882378282 -0.2522601767837586717 -0.1179101328516139191 -0.14967016743372107968 -0.12932871066980153318 -0.09461745283405607887 -0.24050380535679333205 -0.19510608340493440505 -0.24990128851990145442 0.15332308837678401692 -0.068170229354465677885 0.013517912906634215603 -0.050432533101987732371 0.27177298011984529769 0.20097446654467124305 0.26447408030833979842 0.020720988088068419825];
IW1_2 = [0.19143026693364964541 1.8155717881796946678 0.36589548042862962696 -0.33404337608637335588 -0.76777796699591471796 -0.037390781936496808591;-0.047362420991561099415 1.3232170509073619691 -0.98281128340715007141 -0.56556103942572477639 -1.3373668891563170735 1.2360553429397340697;0.64725349681436616933 1.1414890516278322075 -0.96156427408142675084 -0.4707421174957008847 -0.82054381868158166036 0.65402880865239354513;0.21823666459107340931 0.25017800522638189431 -0.26225934421186131162 -0.40189942875593853699 -0.63773280841659263363 0.41918598246814720021;0.35741783871267429618 0.081960987030814599907 1.557652812892942995 0.071426638626743144123 0.56603366776521524262 -0.83689133603331833378];

% Layer 2
b2 = [-0.43243418404159883472;-0.52270969317057391912;-0.43299279241513033423];
LW2_1 = [-1.4447861524079892437 -0.98230741592209647184 1.3954229027010127684 1.2783751673542920191 0.64456439925802999635;0.42672097985810375498 0.92589107731964725989 0.5194134346455707707 -1.5580947989589262193 0.1028938819369879798;-0.38832484137893752418 0.39127971913128617443 -0.82852081026056734192 0.28007595396671275401 0.6189561815950274104];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = [0.0470926729892737;0.0376234231319031;0.06953254154686];
y1_step1.xoffset = [19.91904251;2.583829047;15.72255665];

% ===== SIMULATION ========

% Dimensions
TS = size(x1,2); % timesteps

% Input 1 Delay States
xd1 = mapminmax_apply(xi1,x1_step1);
xd1 = [xd1 zeros(16,1)];

% Input 2 Delay States
xd2 = mapminmax_apply(xi2,x2_step1);
xd2 = [xd2 zeros(3,1)];

% Allocate Outputs
y1 = zeros(3,TS);

% Time loop
for ts=1:TS

      % Rotating delay state position
      xdts = mod(ts+1,3)+1;
    
    % Input 1
    xd1(:,xdts) = mapminmax_apply(x1(:,ts),x1_step1);
    
    % Input 2
    xd2(:,xdts) = mapminmax_apply(x2(:,ts),x2_step1);
    
    % Layer 1
    tapdelay1 = reshape(xd1(:,mod(xdts-[1 2]-1,3)+1),32,1);
    tapdelay2 = reshape(xd2(:,mod(xdts-[1 2]-1,3)+1),6,1);
    a1 = tansig_apply(b1 + IW1_1*tapdelay1 + IW1_2*tapdelay2);
    
    % Layer 2
    a2 = b2 + LW2_1*a1;
    
    % Output 1
    y1(:,ts) = mapminmax_reverse(a2,y1_step1);
end

% Final delay states
finalxts = TS+(1: 2);
xits = finalxts(finalxts<=2);
xts = finalxts(finalxts>2)-2;
xf1 = [xi1(:,xits) x1(:,xts)];
xf2 = [xi2(:,xits) x2(:,xts)];
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
  y = bsxfun(@minus,x,settings.xoffset);
  y = bsxfun(@times,y,settings.gain);
  y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
  x = bsxfun(@minus,y,settings.ymin);
  x = bsxfun(@rdivide,x,settings.gain);
  x = bsxfun(@plus,x,settings.xoffset);
end
