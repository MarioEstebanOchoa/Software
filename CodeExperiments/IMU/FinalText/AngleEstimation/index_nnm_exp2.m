function [y1,xf1,xf2] = index_nnm_exp2(x1,x2,xi1,xi2)
%INDEX_NNM_EXP2 neural network simulation function.
%
% Auto-generated by MATLAB, 27-Aug-2019 17:44:30.
% 
% [y1,xf1,xf2] = index_nnm_exp2(x1,x2,xi1,xi2) takes these arguments:
%   x1 = 8xTS matrix, input #1
%   x2 = 3xTS matrix, input #2
%   xi1 = 8x2 matrix, initial 2 delay states for input #1.
%   xi2 = 3x2 matrix, initial 2 delay states for input #2.
% and returns:
%   y1 = 3xTS matrix, output #1
%   xf1 = 8x2 matrix, final 2 delay states for input #1.
%   xf2 = 3x2 matrix, final 2 delay states for input #2.
% where TS is the number of timesteps.

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [-0.2493;-0.1472;0.7933;0.3099;-0.1999;0.1149;0.7926;0.0706];
x1_step1.gain = [5.88408355398647;10.482180293501;13.5135135135135;7.36377025036819;6.47878198898607;7.68935024990388;11.2549240292628;4.41793682350342];
x1_step1.ymin = -1;

% Input 2
x2_step1.xoffset = [-37.58893822;-56.51672659;-19.90957524];
x2_step1.gain = [0.0203652161747678;0.0399559081207787;0.0383263708961283];
x2_step1.ymin = -1;

% Layer 1
b1 = [1.2637790687861862882;0.58578107373089316479;0.57068349634695392236;-0.23060387168389506751;0.0038975874447451652749;-0.047280982413505617812;0.30249916441882090945;-0.59369755749689190338;0.098214412888301252935;-2.4694762000294212534];
IW1_1 = [-0.19258959322983462692 0.14520827090894977696 0.17778574596322152535 -0.52288882821242455012 0.06255827490451558448 -0.14971011073126300195 -1.7076468148609933451 -0.34608257051385593606 0.0020498768577002896528 -0.099100813428954714901 -0.16265337011358374508 0.35281294760936537935 -0.53293826548317957403 -0.75233819982980354446 -1.2308646892473267265 -0.84890510885786196749;-0.96589764586115867129 -0.14575383659802623737 0.42472638295265424668 -0.93493701126959649628 0.23797611661911932668 0.4519565580721364717 -0.33460418616364057121 -0.39673812963631954753 0.92841960593628558573 -0.14402167003857288541 -0.45215033570644963534 0.4436495900609919163 -0.50302026162691448885 -0.67971003441145150248 -0.64603604232155475984 0.096726493908892874352;0.12900925400713209035 0.022014631787760190196 0.46392293758906422152 -0.79877557439565161079 0.19946194709278008972 0.54580121506002410303 -0.050368495701740047255 -0.44031298814354957738 0.013923940952479991681 -0.17727424656661580626 -0.57808826043010974605 0.24747775218726417168 -0.7281827584202434922 -0.63472453069564671591 0.00389471037921468137 0.58124547649079394418;-1.1467993771731870289 -0.41677687371210847544 -0.093222664475204233825 0.10247286242987466154 -0.18972707300142560571 0.79439253760928607573 -0.10406702893552118028 -0.18353620872099080108 0.84700741679676216922 0.14103036717623337881 0.1760234125236148639 -0.011661952507572169793 0.46143010262425865342 -0.89469256377819761372 -0.02304683012880998777 -0.057733976445892343232;0.094218739906472309675 -0.05659515862577040729 -0.26580624303127192709 -0.21575920542536358715 -0.069588096899419749075 -0.13560095509748604226 -0.085407701607491476326 -0.082842844218193281702 -0.088583503547753308927 0.076002610770962181208 0.29580662897336923445 0.24565675778543474839 -0.025121919161301395351 0.11219461745778760986 0.07033334360944196173 0.10213671154912494499;0.23193814584545621726 0.2925747519469128477 0.36273559925846587948 -0.3721262669317220162 0.51668262247885177185 -0.18510530730770108354 -0.79856613080425353779 -0.39912405702005432362 -0.27425791053018444554 -0.38533442582522831055 -0.13927187439616739439 0.46707931011612713323 -0.50442313300344887583 0.24730500345326186795 0.23391498089464890509 0.26522928810596718696;0.2705840075114583354 0.056677191151682064507 0.087241227162180176591 0.18727834134629064988 -0.036376268749753776222 -0.37423184278471172126 -0.21020365997672396663 0.0075192393761764654558 -0.23782581054050663805 0.04452379385942634854 -0.055578031831265195528 -0.1542050294994749271 -0.10708271116737411166 -0.12909205084791158802 -0.693101685025851455 -0.6219902337378435675;-0.26970975963028698263 -0.050234559690776711682 -0.4337585282342224513 0.20944326810767466274 -0.016231299823624149165 -0.67451902490855086825 0.19175885645062171192 0.17826614163596879448 0.2744576567657702193 0.12441310123228312146 0.45061728631355157937 -0.01123301379082021316 0.44110330982504419861 0.80435110584338620487 -0.15402898686904040182 -0.2361517811441442849;0.44547536775722867963 -0.0091699771060859795735 -0.17277871422983662186 0.48634650098334658574 -0.29138515401044895459 -0.22411937655269381642 0.012567606571841881402 0.16464552307356550287 -0.42475127128417261568 0.21454439022736160325 0.067594602864181549395 -0.43352010758961062598 0.17174784028672010483 -0.07925706953373234942 -0.28586999936762025332 -0.41208988976784688418;-0.39648413085327482985 0.45165850743074198448 -0.055039656207990547698 -0.45069946115647108176 0.30345925897549952399 -0.10077074674477268235 -0.030584443142657388726 0.15700204151700550281 0.10360577182111284367 -0.26942413925360864102 -0.17658511744413232791 0.32978203488359658646 -1.165784050790677373 -0.11674084635517112396 0.52096396223103225154 0.20361610586901318642];
IW1_2 = [-0.11558252862467630062 -1.1567628639649898403 -0.25960884122548666397 -0.56097556885891108891 0.11301404282626946463 -0.50754208894721186685;1.0977997776623955595 0.45394005755360689047 1.0961283047114562805 -0.16450448640188872207 -0.36896112427578570125 -0.68544753162509020061;1.0110891529447001425 -0.37284413372916846985 0.93931774683819280192 0.092102450074557487558 0.16490959390567203058 -0.12734607606119177636;2.8053404165276192295 0.030303262938577168323 -2.9820914481867526469 -2.3752461821465544745 0.12246715774946077826 2.6804419540535096012;0.61000111437004389536 0.78582616046457198777 1.2759774332736293356 -0.18449361100732272756 -0.21049065906622471678 -0.56030901503519436879;-2.0656317749007016005 0.81133335757575764102 0.09782626375395321594 1.7639966175394627967 -0.62146062271032431745 -0.069666551005058113821;1.0909958336006995161 -1.9542174673373349236 0.37311997310753847179 -1.6041995413775658186 1.4656541718959916754 -0.37421245483044668356;-0.40722832490819232953 0.8658474292395533789 -0.6813192801464471593 -0.1485339530061864366 -0.19715463446814035509 -0.38935656848499139437;0.1646247276523575831 -1.17705511473403579 -0.56440604043654984956 -0.98241608826628179507 0.80388272968690610565 0.12669706547348946746;1.2833326785776244527 -1.4768847956124728782 -0.2220581840875042734 0.75024304379185957625 0.40007572054975892861 0.33610074214283103267];

% Layer 2
b2 = [0.51161672531208290948;0.93130890513935193908;-1.0618568988223671123];
LW2_1 = [0.74541062432852178699 -1.5337322803139483707 1.1640205022792335932 0.18447606691616069696 0.29263568854217031356 -1.0222053011764622443 0.29770485369692256672 0.72496589260448274228 -1.8851653768103382447 0.72815267790011772853;-0.11164752092391562466 0.23631516741895700062 0.40491956655894967287 0.3170648355354635517 0.93839539859302190106 0.66307214367560218804 -1.0049852255281845892 0.37831711313200228064 1.7337689030481366892 0.75126630969884478084;-0.36219553759044675889 0.74602696381450839258 -1.1063879895951558296 -0.29388807170359387833 0.29686100365604217721 0.087865924416222901394 0.51433378453176981093 -0.89422509254023430092 -0.18860668436165994866 -1.0096801098311518619];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = [0.0203652161747678;0.0399559081207787;0.0383263708961283];
y1_step1.xoffset = [-37.58893822;-56.51672659;-19.90957524];

% ===== SIMULATION ========

% Dimensions
TS = size(x1,2); % timesteps

% Input 1 Delay States
xd1 = mapminmax_apply(xi1,x1_step1);
xd1 = [xd1 zeros(8,1)];

% Input 2 Delay States
xd2 = mapminmax_apply(xi2,x2_step1);
xd2 = [xd2 zeros(3,1)];

% Allocate Outputs
y1 = zeros(3,TS);

% Time loop
for ts=1:TS

      % Rotating delay state position
      xdts = mod(ts+1,3)+1;
    
    % Input 1
    xd1(:,xdts) = mapminmax_apply(x1(:,ts),x1_step1);
    
    % Input 2
    xd2(:,xdts) = mapminmax_apply(x2(:,ts),x2_step1);
    
    % Layer 1
    tapdelay1 = reshape(xd1(:,mod(xdts-[1 2]-1,3)+1),16,1);
    tapdelay2 = reshape(xd2(:,mod(xdts-[1 2]-1,3)+1),6,1);
    a1 = tansig_apply(b1 + IW1_1*tapdelay1 + IW1_2*tapdelay2);
    
    % Layer 2
    a2 = b2 + LW2_1*a1;
    
    % Output 1
    y1(:,ts) = mapminmax_reverse(a2,y1_step1);
end

% Final delay states
finalxts = TS+(1: 2);
xits = finalxts(finalxts<=2);
xts = finalxts(finalxts>2)-2;
xf1 = [xi1(:,xits) x1(:,xts)];
xf2 = [xi2(:,xits) x2(:,xts)];
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
  y = bsxfun(@minus,x,settings.xoffset);
  y = bsxfun(@times,y,settings.gain);
  y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
  x = bsxfun(@minus,y,settings.ymin);
  x = bsxfun(@rdivide,x,settings.gain);
  x = bsxfun(@plus,x,settings.xoffset);
end
