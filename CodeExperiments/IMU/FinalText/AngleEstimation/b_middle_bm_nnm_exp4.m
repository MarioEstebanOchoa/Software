function [y1,xf1,xf2] = middle_bm_nnm_exp4(x1,x2,xi1,xi2)
%MIDDLE_BM_NNM_EXP4 neural network simulation function.
%
% Auto-generated by MATLAB, 13-Sep-2019 15:02:16.
% 
% [y1,xf1,xf2] = middle_bm_nnm_exp4(x1,x2,xi1,xi2) takes these arguments:
%   x1 = 5xTS matrix, input #1
%   x2 = 3xTS matrix, input #2
%   xi1 = 5x2 matrix, initial 2 delay states for input #1.
%   xi2 = 3x2 matrix, initial 2 delay states for input #2.
% and returns:
%   y1 = 3xTS matrix, output #1
%   xf1 = 5x2 matrix, final 2 delay states for input #1.
%   xf2 = 3x2 matrix, final 2 delay states for input #2.
% where TS is the number of timesteps.

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [-0.478430112409621;-0.351279271702234;-0.234764927001974;-0.148282331331232;-0.0835727366484347];
x1_step1.gain = [2.2807501775659;3.62779767099633;5.16678629396411;6.36699236891776;9.26862345268153];
x1_step1.ymin = -1;

% Input 2
x2_step1.xoffset = [-42.35398667;-25.03195236;-5.972213304];
x2_step1.gain = [0.0198931201438839;0.045147174777309;0.0643454772835516];
x2_step1.ymin = -1;

% Layer 1
b1 = [-0.15897151512259605211;-0.54238863646113866235;-0.17839756674330084496;-0.082660628431098850943;-0.33674279543979673823;0.042104876892032676305];
IW1_1 = [0.024378970965079866523 0.20197211620471719473 0.24973343146130902448 -0.15212729616821119016 0.013213889026144563441 -0.010109592746298587743 -0.14502158161757541799 -0.30354017491654794458 0.147861497798629421 -0.0030708604418165437629;0.21306825310463667345 -0.58696628734021649709 -1.1436724561486810714 -0.49642074625404436494 -0.26451570805639335049 -0.41763940739921767697 0.49291895077016784077 1.0659760743389223858 0.34154488755443157544 0.35285870804459540384;-0.084472659027801599851 -1.2610250895034429419 -1.4740789887885339393 1.1402987358059886169 -0.12814160730045612291 0.15831982422667467691 1.1341685205547964443 1.8089146934537272404 -1.1029551199090492641 0.16320758803414098237;0.0025595923653212900029 0.20111614170964942083 0.27275461594561872802 0.042691832778396970882 0.033037270773138893709 0.075883173576478529787 -0.12777181826243505514 -0.29226334040708490392 -0.03514543287701702573 -0.016121310967872590908;-0.18516986795079390382 0.40610784523052823047 0.95752841797133947388 -0.61667655632401296995 -0.031310573414692691174 -0.13740454177014835291 -0.65179035920724459618 -1.1086283675187686981 0.66511618769373426208 -0.20455554805832540377;-0.1778736670727408542 -0.21452386768992681709 -0.043374966305100015607 -0.028961016814081572135 -0.020934207510027207783 0.025802504729802444583 -0.091459666127375674471 0.10862485757611239912 0.071021767054896239868 -0.13869780244145246684];
IW1_2 = [0.067867701517903722408 0.0045166791061829669393 0.097986470845151454889 0.22332443743903668265 0.083742496800980781302 0.010977041401806063997;1.8053533383941267054 0.13249423588780476213 0.56315083927215436876 -1.7984699264493970716 0.035525692905851662118 -0.54887609306057805192;1.8340685951781556806 0.6529455178327391307 -0.8938524195955925844 -2.0186700056334463405 -0.39689632900039856223 0.88255032503761843277;-0.98829234317996550452 0.34121068919548391829 0.13672273520721558993 0.6697471842295941169 -0.088614607674827497452 0.13756951566182321067;-0.65458987387072820052 0.57847992808940051912 1.1675106096131249167 0.94125651707064272866 -0.62856231857662414608 -1.6686609516877934922;-0.040128800816953011377 0.27380043190484237847 1.1442818584201084331 -0.16074311467811053245 -0.35746735903458998207 -1.1807398964344821835];

% Layer 2
b2 = [-3.1944258816270982848;-0.25448421965957263025;-0.31681141092644626855;-0.20633924225154376408;1.6838928630414509158;2.1988284926089622928;0.4841046361808553633;-0.16677317855240933464];
LW2_1 = [3.3790227485493242732 3.4227188492789375474 -3.5006002272264753472 0.2996453337600399891 0.88894343134599074219 -3.5571010730214611684;-1.3883741198329409006 0.2281668504537115727 -0.52584679711855419892 -0.20367833102533830503 -0.26273587484763355482 -0.30658290739597759966;-0.075543875948825750521 1.0790702327339363187 -0.87948286131999675597 -1.6365856179519195912 -1.5194987112462170487 0.44112856549184120691;-0.45463590636245931886 -0.61787719641339111654 0.20104439318379488388 -0.34286193990863034209 0.50747508290234333295 -0.29083642963873468368;0.5469430112287336776 0.85700414372517652595 0.56524796751480677059 -0.048430238129433755834 0.81798936739749661395 -0.10257950305792826184;1.546995974484506986 2.4246767726544713462 1.0447576378320424517 -0.98307410991354882146 1.1090180985192301666 0.13077872281413277511;0.38234213812062251003 -0.80500312908280857727 2.4702900695905309902 1.6302257293427542262 0.56374649801806486771 -0.19311749903947139639;1.4195732771475644274 -1.1499681532232004511 0.98267504050158038797 0.20460626404142776003 0.16578833988946642397 1.0981124638845298769];

% Layer 3
b3 = [-0.55864421435594779908;-0.74957736576659528271;-0.023378972125465691256];
LW3_2 = [-1.8422924454882823042 -3.2637206278029466944 0.63562336181529166534 1.2096724349049980951 -1.91869653875974433 0.3875505211332296307 0.023526813886825915373 -0.87195466803052734672;-0.7419346698584377009 -1.6265179402447307311 -0.77609209260311573519 -0.57406227324138014989 -0.084858719253149472728 0.10000404848537779168 0.38374292700579332172 -1.3068768728034887427;-0.53786371254220910476 0.051210000375794192951 -0.064391205055200961827 -2.2692381370174472544 -0.82815727728004528974 0.1764804327134837092 -0.51096290999305837843 1.242508987084376848];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = [0.0198931201438839;0.045147174777309;0.0643454772835516];
y1_step1.xoffset = [-42.35398667;-25.03195236;-5.972213304];

% ===== SIMULATION ========

% Dimensions
TS = size(x1,2); % timesteps

% Input 1 Delay States
xd1 = mapminmax_apply(xi1,x1_step1);
xd1 = [xd1 zeros(5,1)];

% Input 2 Delay States
xd2 = mapminmax_apply(xi2,x2_step1);
xd2 = [xd2 zeros(3,1)];

% Allocate Outputs
y1 = zeros(3,TS);

% Time loop
for ts=1:TS

      % Rotating delay state position
      xdts = mod(ts+1,3)+1;
    
    % Input 1
    xd1(:,xdts) = mapminmax_apply(x1(:,ts),x1_step1);
    
    % Input 2
    xd2(:,xdts) = mapminmax_apply(x2(:,ts),x2_step1);
    
    % Layer 1
    tapdelay1 = reshape(xd1(:,mod(xdts-[1 2]-1,3)+1),10,1);
    tapdelay2 = reshape(xd2(:,mod(xdts-[1 2]-1,3)+1),6,1);
    a1 = tansig_apply(b1 + IW1_1*tapdelay1 + IW1_2*tapdelay2);
    
    % Layer 2
    a2 = tansig_apply(b2 + LW2_1*a1);
    
    % Layer 3
    a3 = b3 + LW3_2*a2;
    
    % Output 1
    y1(:,ts) = mapminmax_reverse(a3,y1_step1);
end

% Final delay states
finalxts = TS+(1: 2);
xits = finalxts(finalxts<=2);
xts = finalxts(finalxts>2)-2;
xf1 = [xi1(:,xits) x1(:,xts)];
xf2 = [xi2(:,xits) x2(:,xts)];
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
  y = bsxfun(@minus,x,settings.xoffset);
  y = bsxfun(@times,y,settings.gain);
  y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
  x = bsxfun(@minus,y,settings.ymin);
  x = bsxfun(@rdivide,x,settings.gain);
  x = bsxfun(@plus,x,settings.xoffset);
end
