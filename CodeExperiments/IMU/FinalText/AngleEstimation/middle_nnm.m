function [y1,xf1,xf2] = middle_nnm(x1,x2,xi1,xi2)
%MIDDLE_NNM neural network simulation function.
%
% Auto-generated by MATLAB, 27-Aug-2019 16:49:15.
% 
% [y1,xf1,xf2] = middle_nnm(x1,x2,xi1,xi2) takes these arguments:
%   x1 = 8xTS matrix, input #1
%   x2 = 3xTS matrix, input #2
%   xi1 = 8x2 matrix, initial 2 delay states for input #1.
%   xi2 = 3x2 matrix, initial 2 delay states for input #2.
% and returns:
%   y1 = 3xTS matrix, output #1
%   xf1 = 8x2 matrix, final 2 delay states for input #1.
%   xf2 = 3x2 matrix, final 2 delay states for input #2.
% where TS is the number of timesteps.

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [-0.3399;0.0772;0.8158;-0.3435;-0.2594;-0.0021;0.877;0.18];
x1_step1.gain = [4.53720508166969;7.01016473887136;11.7508813160987;2.26449275362319;6.91802144586648;11.2170499158721;20.9643605870021;7.35023888276369];
x1_step1.ymin = -1;

% Input 2
x2_step1.xoffset = [-39.50838032;-56.20691974;-13.03478832];
x2_step1.gain = [0.0195047175707841;0.0395706711489379;0.0539272120771512];
x2_step1.ymin = -1;

% Layer 1
b1 = [-0.00067376750704858229517;0.17808195027217049722;0.046733647744647707767;0.41030863883380275237;0.10671763640277238949;-0.28140591749597620996;0.22308550429481105448;-0.12708159000964988627;0.017165056038586531256;0.13428031170923357407];
IW1_1 = [0.011764236582539501844 -0.078764011259256833108 -0.029346563642377768155 0.23738677214842854313 0.44814168760325429064 -0.15451790638246076792 -0.084361933103988845373 -0.1830510702629809805 -0.091662376264075182131 0.13964814073032436048 0.15715743649825991701 -0.01262286830343715624 -0.3701068312474165567 0.025704233905232749813 -0.099402768403823449361 0.058502941802107855107;0.1010022876229749178 -0.38337809449031468034 -0.7501114736559714169 -0.53465823675636126033 -0.44043937219871165389 -0.1201861039937876241 -0.42024253992183036033 -1.5461711794788868257 -0.74317642929816341013 0.091430713498565269193 0.62827647538150521722 -0.43545746751373676231 0.49621463419966860275 -0.49569708887091185057 -0.29499918160721610993 0.72872001723479629121;0.15770377076075589584 -0.012333931556917384839 -0.62551008103070804278 -0.69265152745494829034 -0.31420740697185839396 -0.34011467618531743273 -0.30397621321946666217 0.69140680575788815432 -0.63352548087997728743 0.0032313521172661020461 0.40767980735461573083 0.49596333486572902194 0.99597773242221188106 -0.26382368822879431747 0.43489373506194412 -0.80926576240977232679;0.14751965367331332235 0.88446861799690768002 1.0726610778939855706 -0.5003330553530307423 0.30093291665366111998 -0.93912848638137724766 -0.84608816812268250462 0.13911777667124336499 0.67357790936441319651 -1.127763789239149439 -1.6676120025585605688 1.3500578473488793474 0.35742318699129999038 1.7536065981404327374 0.7731918621771838307 -0.48439124531662913764;0.032166473399938610989 -0.37285884839328603535 -0.24609156339117652101 0.43947633154060850025 1.3482336233266218883 0.10684562036131751983 -0.56725732673641904302 -0.873354859002482109 -0.13921690642658968162 0.18849812553150199768 0.25325535822654282603 -0.031410091658884239929 -0.93380098804597932993 -0.051986937561215133818 0.098317543390326736508 0.30149003032764382093;0.10911554840415318979 -0.2264897083914816367 -0.39016419684714320759 0.35106038027158115167 0.76872613988881877134 -0.35022322951365514321 -0.032204151091874466672 -0.49480846737182532236 -0.43257062197226248124 0.49865720551636966151 0.80276888816708191765 -0.19315963007915024074 -0.61998508807640051455 -0.37669365991204578625 -0.41781074312221677669 0.25371174335541063494;-0.13393857556117469421 -0.35780779955310887397 0.127849232911313615 -0.58680399575346753327 -0.60854123790345970857 0.76271216779368089522 0.13352576487072095879 -0.29090391247172669997 0.29800357624490292352 -0.12203085050094730768 -0.73299318903910792855 0.11156186517323697649 0.70761263562990128761 -0.017879696248308360462 0.24260966265440786493 0.43555250836447390039;-0.073098650955723695755 -0.71050918764946935369 -1.072436951093809876 -0.042988987453059832045 -0.58887814332253796135 0.54389490411672924974 0.68915943644593635753 -0.57764365315538501733 -0.96243801960299513176 0.63085636788637167172 1.3396481930180248465 -0.97366172943019757557 0.28371071429394029151 -1.3973836924261444636 -1.1708751657330496165 0.15158795091574220337;-0.024694938882883241821 -0.30000518819960408923 0.057579241432270264478 0.059962383003280619875 0.13667074969930395612 0.36990348731395267246 0.28577872817630317615 -0.8335624370968081065 0.095258554997410774257 0.23603066701782918213 -0.077032199108703611201 -0.25984036112065239665 -0.1336837862442654401 -0.33678386966583451212 -0.4617759614039821936 0.76220253135644466802;0.094487389510191963082 -0.24263284798261547381 -0.64890099234156262131 -0.033315313263197580962 0.52745902869107319511 -0.17253837090641396812 -1.2722564156242675004 -1.3817291959719788519 -0.37850937517559946066 -0.0090090137598654827789 0.55045987145970398657 -0.33906644139664005033 -0.33702838399543411096 -0.12155063209616159825 0.77444489009768469057 0.68688741120022644981];
IW1_2 = [-0.43948741418252346147 0.029434512686793694314 0.080711479938926966593 0.21160506387901109604 0.29155837319248384398 0.075029090266541281773;1.3581415906000038341 0.22403080223799867743 0.23486199248375555504 -0.24441921690836584946 -0.82522824136129302453 -1.0821726589594631296;-1.2019287165417276153 1.3474371395248161409 -0.81640407313674279166 1.5727789016122910581 -0.67474995306879825829 0.30310770491843846974;-1.7560055921342569984 0.90058157652168235874 0.82432570748469791155 0.70032542017425869485 -0.21866289442538955345 0.48345579735444682568;-1.6176236463559792167 -0.94201407302486472872 -0.40427401595997641826 1.3973713769951217056 0.99015179722914370419 0.42431065276407925468;-0.20400718905768380762 -0.43876400676706966975 -0.89041352892805791797 0.0020306247794859037456 0.46886450180844996272 0.080014874846312339374;1.054526111645806008 -0.030017552226267465998 0.13061847425055758687 -0.5122690468682470355 0.32697821327239690037 0.0098429320466216860958;2.1707456515049932122 -0.60412213864311070655 -0.27088498639907643284 -0.77910455373742271146 -0.33122583923351583968 -0.96100371073424173396;1.4630791067397077576 -1.5640574291051232425 0.90704865753541019657 -1.3518258442461332791 1.3336772992680179239 -0.74307560027809127501;-0.68511308380301416676 0.16126016638151915994 0.25908389145457433322 1.5932866101696114836 -0.57980290386037303119 -0.3499227492164790343];

% Layer 2
b2 = [0.41521124676292109346;0.0044230559029034780677;-0.19585625536914000322];
LW2_1 = [0.47139945464288873778 -3.1798956650766800891 -0.51120901768373172569 1.8933829602007952175 -2.1178748324185017182 2.4833427409900323823 1.7016996319587593955 2.8428577434426101078 0.025361721378660231907 2.3704062335284814544;1.9868924685349989012 0.040441181661287982363 -0.33454655331545607444 0.10595048155901445885 -0.72447900380033147805 0.46455094354111808874 0.80349190375394718977 0.078055622774753724569 -0.92309332591095483167 0.23736187063257224716;1.1180909400255805153 0.3053970284586147721 0.45280390699913009023 -0.31166741324505892186 -0.116235190434291355 -1.2816763784775491164 -0.76338009441858978299 -0.45156838768265550321 1.0070932047585008373 0.042697168409204976081];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = [0.0195047175707841;0.0395706711489379;0.0539272120771512];
y1_step1.xoffset = [-39.50838032;-56.20691974;-13.03478832];

% ===== SIMULATION ========

% Dimensions
TS = size(x1,2); % timesteps

% Input 1 Delay States
xd1 = mapminmax_apply(xi1,x1_step1);
xd1 = [xd1 zeros(8,1)];

% Input 2 Delay States
xd2 = mapminmax_apply(xi2,x2_step1);
xd2 = [xd2 zeros(3,1)];

% Allocate Outputs
y1 = zeros(3,TS);

% Time loop
for ts=1:TS

      % Rotating delay state position
      xdts = mod(ts+1,3)+1;
    
    % Input 1
    xd1(:,xdts) = mapminmax_apply(x1(:,ts),x1_step1);
    
    % Input 2
    xd2(:,xdts) = mapminmax_apply(x2(:,ts),x2_step1);
    
    % Layer 1
    tapdelay1 = reshape(xd1(:,mod(xdts-[1 2]-1,3)+1),16,1);
    tapdelay2 = reshape(xd2(:,mod(xdts-[1 2]-1,3)+1),6,1);
    a1 = tansig_apply(b1 + IW1_1*tapdelay1 + IW1_2*tapdelay2);
    
    % Layer 2
    a2 = b2 + LW2_1*a1;
    
    % Output 1
    y1(:,ts) = mapminmax_reverse(a2,y1_step1);
end

% Final delay states
finalxts = TS+(1: 2);
xits = finalxts(finalxts<=2);
xts = finalxts(finalxts>2)-2;
xf1 = [xi1(:,xits) x1(:,xts)];
xf2 = [xi2(:,xits) x2(:,xts)];
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
  y = bsxfun(@minus,x,settings.xoffset);
  y = bsxfun(@times,y,settings.gain);
  y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
  x = bsxfun(@minus,y,settings.ymin);
  x = bsxfun(@rdivide,x,settings.gain);
  x = bsxfun(@plus,x,settings.xoffset);
end
