function [y1,xf1,xf2] = middle_nnm_exp2(x1,x2,xi1,xi2)
%MIDDLE_NNM_EXP2 neural network simulation function.
%
% Auto-generated by MATLAB, 27-Aug-2019 17:52:21.
% 
% [y1,xf1,xf2] = middle_nnm_exp2(x1,x2,xi1,xi2) takes these arguments:
%   x1 = 8xTS matrix, input #1
%   x2 = 3xTS matrix, input #2
%   xi1 = 8x2 matrix, initial 2 delay states for input #1.
%   xi2 = 3x2 matrix, initial 2 delay states for input #2.
% and returns:
%   y1 = 3xTS matrix, output #1
%   xf1 = 8x2 matrix, final 2 delay states for input #1.
%   xf2 = 3x2 matrix, final 2 delay states for input #2.
% where TS is the number of timesteps.

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [-0.2872;-0.1512;0.736;0.3377;-0.3962;0.0385;0.5888;0.3788];
x1_step1.gain = [6.46412411118293;7.58725341426404;9.92063492063492;6.25978090766823;6.6511473229132;9.68992248062015;6.83526999316473;5.94530321046374];
x1_step1.ymin = -1;

% Input 2
x2_step1.xoffset = [-39.50838032;-56.20691974;-13.03478832];
x2_step1.gain = [0.0195047175707841;0.0395706711489379;0.0539272120771512];
x2_step1.ymin = -1;

% Layer 1
b1 = [0.12984150601575855655;-0.25281935520750548063;0.82326810670673300496;-0.14356391469386595161;1.0567991092780724127;-0.19424044767641601705;0.16118813576537122101;0.25058416705772834643;-0.29111548062683589855;-0.47381911023970679775];
IW1_1 = [0.1712623011603987 0.19642633094707193098 0.0070539583483084557919 0.63358739094667937408 -0.31705107617229077999 -0.15432969940992710689 -0.12620681224903224082 -0.32638054912778913241 0.10366398537884059794 0.089697609823706600518 0.90592360639108560072 0.34905757102937434722 0.062907876977290860809 0.39265358377782605404 -0.71380256896931970623 -0.25541178076079174009;0.18852070326468606254 -0.28521393785878929039 -0.77514721898965222024 -0.78202111375833638363 -0.02237109741620650627 0.42559543882825628947 0.18815792106794931859 0.14765048598433405669 -0.22045503234913976787 0.15731867198767887639 0.2762020717274525361 0.36585529627713037071 -0.021341537573750912066 -0.50843573262157804038 0.42966901185839656563 0.26087228349273106076;0.025998602353559743111 -0.0085375614642673926941 0.54273703487720770244 0.94410329017930116891 0.42266140589303824449 0.26607597069761551589 0.1152238136086619763 -0.53945494128664017719 0.72013566037168041944 0.32589831763525328734 -0.50199840153103070239 -1.1598403083812154346 0.60721621907960088294 -0.78753069594485691773 -1.360289446191289553 -0.28401641827759088743;-0.90335982278975179849 -0.28638671491604561492 0.54669733487432892183 0.10238037543006832386 0.81063675418653469151 -0.99601022759639856741 -0.7944991375348632312 0.32775360622364185792 0.3720117873840894096 -0.031524814856558447396 -0.46573203744331442833 0.07504923656114116659 -1.0340820289448564573 1.1299430008520421342 0.38097690089465513497 -0.82970742118410889532;-0.61437473812475595913 -0.22573087260125071496 1.394485943300214803 1.6135706569868024651 1.0531596391691850911 -0.31027637962241133573 -0.82359917846496155658 -0.82174911434508013386 1.1715040006954424712 0.42538541626318077116 -1.1130364108125054834 -1.6379367229641226267 0.038871050117733188523 -0.22689858707034152308 -0.96966264124312406825 -0.46607283839757340793;0.12955712821363632448 0.14898196307326211363 0.1605904924799016753 0.076097741709177352254 -0.12223103680004053506 -0.0040445775076089303043 0.079877782619104720219 0.095112809459697258974 -0.30054057683110008137 -0.19302285917874364984 0.078183696773670513513 0.13423783518810972204 0.020479446234893425999 0.10938482624320063075 0.38602099381219195928 0.26720224728069397191;-0.09500927318587684689 0.20076064687791309038 0.63400519961465173768 0.094090821442952138343 -0.63030859664234040185 -0.047133957962657312135 0.90852192668778231077 -0.70631055642192808186 -0.45817388289647215105 -0.30603629281036104359 -0.73043451862459252144 -0.46894560355637504578 1.2430706183038584545 -0.30657517025347968964 -1.4583020090968503713 0.28680339758326667265;0.1689598040817503477 -0.28192628666710778385 -0.88801795025636021119 -0.3766606567634434577 -0.16090046442757402478 0.32320280678138074704 0.056083761991760225363 -0.14100115890856076972 0.18841150894424707474 0.40434749059522423487 0.70822556059299923703 0.3563593059229833715 0.038829391929804960015 -0.32911515251015754924 -0.52954717830372988185 -0.22842951412173129189;0.46616157994571966183 0.59576267111681346922 0.63961492207011205746 0.81429909280636569857 -0.27672416685332462682 -0.20910476843394676383 0.098657188745758003789 0.13227764195984267892 -0.55052797409282017149 -0.43100428106261445826 0.68397892898065693057 0.45619149055232888212 -0.031082186160972712086 0.60278434583511675271 0.15231232436454469892 0.13816253478395854049;-0.56552146386439328118 -0.25414266709859217874 0.22836487543296254965 -0.16392258631267697666 0.38764121648710092582 -0.77272022293076159105 -0.83550922641392533219 0.25902907358214050104 -0.15083394072447250944 -0.10453206664881969923 0.030544547235717336292 0.59605038446586289247 -1.0337358319422742525 1.1355352892593721936 1.1051909364737437791 -0.24618715936215165851];
IW1_2 = [-0.43381924942243577092 0.69073363752740146726 -1.2411945547791416455 0.48663841352511277849 -1.3866939970953133798 1.9078632617988116049;1.0805468393050838838 -1.2750899147791650012 1.3696560671896635952 -0.94909213561019156735 1.2344541483966717799 -1.5778409102044173018;-1.8495337961210607247 1.5109474371963147465 -0.75956413858376137238 1.3672713052629361652 0.28604170462625189142 0.563482574814759829;0.31528644345884687672 -0.9653747784909643137 0.80440642612300616854 0.70205256564909201966 -0.40714343679856995761 -0.4480503077243210841;-2.1068949926340421186 1.4666770437007798922 -0.48044962540041691312 2.0133347976205544505 -0.042044917624598492079 0.4481190689811840322;0.17035501558022730917 0.21608828508900351784 0.26898199138851081047 -0.18864199503770356925 0.028390594933351505358 0.025773117290587115036;4.2260672654603563814 1.5563060733995324192 0.25881276178912904218 -4.0668484534171183142 -1.2873469770444521121 -0.48107133993191303345;0.15642469535306322004 0.0717796101198566322 0.030112572359439728625 -0.026322258621798488853 -0.12031418078293991403 -0.092803148980658403677;-0.03644204425337638914 0.38934813918447991332 -1.7734456913532365974 0.21308266822674690188 -0.8356046257041095382 2.1949293216096155135;1.1122608518191572369 -1.2001558882511258464 0.91689389355293460238 -0.29366293915503222101 -0.498940916722334038 -0.59883152452198440407];

% Layer 2
b2 = [-0.24427434374776821335;-0.23569692067815314895;0.083970294815121096499];
LW2_1 = [-0.85620185896088707445 0.49179766126277157934 -3.9403146215916908801 2.2409828468226433706 2.1061836198786347829 0.54560609431611950537 0.40157921044445948899 1.6532819486695773392 1.1970618491931239724 -4.1407445112932457221;-0.90348549373634134962 -1.3073772849119396078 -0.15147974095914787385 0.072677717418304893515 0.073827413630528707089 1.5142802003516753206 0.1171972397339212657 1.4803492800848765398 0.038061884524585982981 -0.073934273143354420355;1.4255973046615837418 1.0507956444200805546 -0.035608048639660501433 0.46096114122373355038 0.17671499446919428089 1.7255313074971552201 -0.039675520846712226952 -0.80170879746103340668 -0.90922719398916385103 -0.47113588348147938945];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = [0.0195047175707841;0.0395706711489379;0.0539272120771512];
y1_step1.xoffset = [-39.50838032;-56.20691974;-13.03478832];

% ===== SIMULATION ========

% Dimensions
TS = size(x1,2); % timesteps

% Input 1 Delay States
xd1 = mapminmax_apply(xi1,x1_step1);
xd1 = [xd1 zeros(8,1)];

% Input 2 Delay States
xd2 = mapminmax_apply(xi2,x2_step1);
xd2 = [xd2 zeros(3,1)];

% Allocate Outputs
y1 = zeros(3,TS);

% Time loop
for ts=1:TS

      % Rotating delay state position
      xdts = mod(ts+1,3)+1;
    
    % Input 1
    xd1(:,xdts) = mapminmax_apply(x1(:,ts),x1_step1);
    
    % Input 2
    xd2(:,xdts) = mapminmax_apply(x2(:,ts),x2_step1);
    
    % Layer 1
    tapdelay1 = reshape(xd1(:,mod(xdts-[1 2]-1,3)+1),16,1);
    tapdelay2 = reshape(xd2(:,mod(xdts-[1 2]-1,3)+1),6,1);
    a1 = tansig_apply(b1 + IW1_1*tapdelay1 + IW1_2*tapdelay2);
    
    % Layer 2
    a2 = b2 + LW2_1*a1;
    
    % Output 1
    y1(:,ts) = mapminmax_reverse(a2,y1_step1);
end

% Final delay states
finalxts = TS+(1: 2);
xits = finalxts(finalxts<=2);
xts = finalxts(finalxts>2)-2;
xf1 = [xi1(:,xits) x1(:,xts)];
xf2 = [xi2(:,xits) x2(:,xts)];
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
  y = bsxfun(@minus,x,settings.xoffset);
  y = bsxfun(@times,y,settings.gain);
  y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
  x = bsxfun(@minus,y,settings.ymin);
  x = bsxfun(@rdivide,x,settings.gain);
  x = bsxfun(@plus,x,settings.xoffset);
end
