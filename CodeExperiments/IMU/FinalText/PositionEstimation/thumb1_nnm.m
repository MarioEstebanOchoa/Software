function [y1,xf1,xf2] = thumb1_nnm(x1,x2,xi1,xi2)
%THUMB1_NNM neural network simulation function.
%
% Auto-generated by MATLAB, 26-Aug-2019 19:38:28.
% 
% [y1,xf1,xf2] = thumb1_nnm(x1,x2,xi1,xi2) takes these arguments:
%   x1 = 8xTS matrix, input #1
%   x2 = 3xTS matrix, input #2
%   xi1 = 8x2 matrix, initial 2 delay states for input #1.
%   xi2 = 3x2 matrix, initial 2 delay states for input #2.
% and returns:
%   y1 = 3xTS matrix, output #1
%   xf1 = 8x2 matrix, final 2 delay states for input #1.
%   xf2 = 3x2 matrix, final 2 delay states for input #2.
% where TS is the number of timesteps.

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [-0.3073;-0.1949;-0.2637;0.1803;-0.4797;-0.1714;-1.8767;-1.0774];
x1_step1.gain = [27.3224043715847;10.8932461873638;13.8504155124654;22.2965440356745;5.48847420417124;3.34672021419009;7.27802037845706;3.67985280588777];
x1_step1.ymin = -1;

% Input 2
x2_step1.xoffset = [0;0;0];
x2_step1.gain = [0.0453777937503893;0.158638129809955;0.0734926863696386];
x2_step1.ymin = -1;

% Layer 1
b1 = [0.26108931851117439527;0.12528967650595143613;-0.25474993410395457838;0.35203882334621966477;-0.34686697877646038846;0.062459677499987716065;-0.10421954291158051775;-1.448529164074036979;-0.093956481379422751576;-0.37423548607831774726];
IW1_1 = [-0.7310179432054418891 1.0905487788522960635 0.090660040949328904447 0.52171055413659128686 -0.048428606687953248966 -1.8783841516346455602 -0.0099216004345065115372 -0.64436204187798995502 0.5223080328358858937 -1.0062984245968646935 0.35496817442675088206 0.1232727796467899678 0.2251333181606480216 1.8103527486059658447 0.20610231226160188878 0.13001720002508904139;-0.29310969003636822006 -0.38122897770453390009 1.7147669249492789589 -0.5519607767234200324 0.43831594991650474347 -1.0767191169880094836 -0.34137421640496923292 0.74685652052739415208 -0.1161165173755884239 -2.2842732028545520429 0.87404569367734918917 -0.11565466870141076494 -0.32907554884581208254 -0.65792465543674549799 1.2264314149728527958 -0.74107043134984029731;-1.692352010862256062 2.0498049669619602398 0.47616203085890485003 -0.94866706476814988136 0.78602103996760452898 -0.49770605170217629976 -2.4882807485274720527 -1.715619635013940103 0.8450644950871916139 -1.5600975114316537606 0.28430176849790439464 0.37865476595941505167 -0.92283887556890153991 -1.0713335467429305758 1.3835063886163818658 -0.13021496233100243733;-0.043450101282270392478 -1.6025302565871586413 1.5207208360355324306 -0.86075771634130648913 -0.97066173761156004929 -0.19367231022571407273 0.48031940340266487954 0.95345123243481000319 -0.069784627794347631191 -1.6239177131409066046 0.86344658119827200071 0.2200752214025482878 0.71888089888200767952 -1.204969938676446306 -0.24735183930933790641 -0.70456540437782544384;-0.58457269771818798354 0.80396921769557738724 0.22210024548719153881 0.66209255911185682653 0.76304211130693877507 -1.6487682397580551985 -0.2749966639366875909 0.26359406784722499983 0.37843502512118387671 -0.5191257493866295869 0.42661847496131577451 -0.23231647260026180857 -0.62334982964623175672 1.6717934134302332438 0.90312722368167797082 -0.13042658564076206607;0.099381243057855422895 0.15414199736434222587 1.1296388689646070791 -0.44771025011176390773 -0.15949143649498928599 -1.7584814443951075624 0.57260195589705809027 0.82217974393797843558 -0.59077325247646417239 -2.4676412985822908652 1.5738906611097751576 -0.045950065504429996044 0.7109143591014571717 0.039697524022113683806 1.533173946483562311 -0.13022056931841036187;-0.42292592336626827487 0.74700339201667165234 -0.12205821630945061507 0.010228156861504293651 -0.048312612155299194949 -0.24104730731036203006 -0.4412500570936435107 -0.15334165506701061266 0.31480320233888819947 -0.80317382586462948701 0.55897821152708593306 0.018354998447146022439 -0.047723141402698926461 -0.16225521007098808735 0.2617543140772752297 -0.22685024959994851135;1.2639009339404392307 -2.866620797719445779 0.65903660185853440989 -0.018579510272172111707 -1.4543449949311642033 0.45918766227777496614 0.13051742061014953711 -0.86520224148764379724 -1.0571955316407319891 1.7257877784661819209 -0.16867884232093999231 0.6516121075418183084 1.6304111418392717159 0.31957086956066843575 -0.66945720437849420836 1.125590338433805071;-0.22603279380803967258 -0.040681260158509653657 -0.19227823710006103353 0.15212873170010607349 -0.20181905343410092013 -0.79010187537822018644 0.15800723267336622135 1.0769986883135922451 -0.20354541244096763242 -0.30728228603285284715 1.5458315223091383395 -0.41553056198500448737 0.16568708638017368151 0.080417555345815822099 0.0041147614080694295755 -0.75640868135209737844;0.057947854180863442308 -0.025092494067236174871 0.25754888484929933101 -0.0037813678913872399504 0.1861498263605276815 0.35418664915387965131 -0.11050081573487112452 -0.75196344397202841137 0.1216676305797561447 0.19048959258216013879 -0.82427173736389502956 0.33544389446673172905 -0.039714008733881527025 0.085802619898640755669 0.089822677172198703288 0.60488735466098286775];
IW1_2 = [0.35493286702937471011 -1.4308021511171875595 0.19777772149620925779 -0.77748996447880569516 1.1296533432799997776 -0.74104559892260524201;1.5358574878361122007 0.97108689087749233693 0.70552574813637969342 -0.033246957514873047568 -0.032067529216190597541 -0.97702755837128529848;2.4745430712710767551 0.35280594949956978201 0.75740633706619087118 -2.540089653788620172 -1.2252294975473363436 -1.7794357896685666365;1.7295644182432641234 2.1428560472643218837 0.84230809901531777939 0.31564061504125590085 -0.75696075224948711213 -0.0014066978506730386765;-0.89506981800939300342 -0.6166164227137385101 -0.66924407564426113826 0.29230646376411206777 0.81129006904642841924 0.28135773721550244586;1.3793332288018609333 0.48831358609201375165 0.36017248776666449528 0.098169441077898683679 0.50145136334655038279 -1.0794850552607413441;-0.34124530591810853242 -0.74118453223847513556 -0.28858003414187022306 -0.61484136194845573353 -0.10647242259893174854 -0.69324443337414320965;-0.55224154418015258816 0.56579943433256785212 0.15010582222194779334 0.85728415947980973755 -0.43599411768819212876 0.8705894028167358023;-1.1310383248259303635 0.96878303404102450447 -1.1804557646931266301 0.71658570627275830489 -1.3390015534412049725 1.3003000468178445015;0.26368078849989196044 -0.48141803276766503839 0.31949424615107069325 -0.60413581415516071083 0.72033022374639688046 -0.89819902837344200996];

% Layer 2
b2 = [2.0438036376738493161;0.28531847226185630406;-2.2444578961833432373];
LW2_1 = [-1.393060869276474989 -2.6798513172343736422 0.85567111481745183887 1.2969550409422609949 1.7422626912099670182 1.495238270151892257 1.2610737117028494314 2.3278083799027911027 -2.2874390905061940948 -2.5198946833320445826;0.067423608993367509234 -0.043825201501164708084 0.15906575686717527862 0.21138794901851448715 -0.031151702907083335392 -0.035382285625367999871 -1.0529875482740171933 -0.36934430628755643422 1.1419471454188883097 1.7948840392688503176;1.6082064785678094054 2.1075519713870862759 -0.69484288335406363402 -1.0142130102912736422 -1.7318014317525913803 -1.2111994401380383746 -1.3469269930685452419 -1.7482042890690849823 1.3154361775261442791 0.88290226067148713796];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = [0.0453777937503893;0.158638129809955;0.0734926863696386];
y1_step1.xoffset = [0;0;0];

% ===== SIMULATION ========

% Dimensions
TS = size(x1,2); % timesteps

% Input 1 Delay States
xd1 = mapminmax_apply(xi1,x1_step1);
xd1 = [xd1 zeros(8,1)];

% Input 2 Delay States
xd2 = mapminmax_apply(xi2,x2_step1);
xd2 = [xd2 zeros(3,1)];

% Allocate Outputs
y1 = zeros(3,TS);

% Time loop
for ts=1:TS

      % Rotating delay state position
      xdts = mod(ts+1,3)+1;
    
    % Input 1
    xd1(:,xdts) = mapminmax_apply(x1(:,ts),x1_step1);
    
    % Input 2
    xd2(:,xdts) = mapminmax_apply(x2(:,ts),x2_step1);
    
    % Layer 1
    tapdelay1 = reshape(xd1(:,mod(xdts-[1 2]-1,3)+1),16,1);
    tapdelay2 = reshape(xd2(:,mod(xdts-[1 2]-1,3)+1),6,1);
    a1 = tansig_apply(b1 + IW1_1*tapdelay1 + IW1_2*tapdelay2);
    
    % Layer 2
    a2 = b2 + LW2_1*a1;
    
    % Output 1
    y1(:,ts) = mapminmax_reverse(a2,y1_step1);
end

% Final delay states
finalxts = TS+(1: 2);
xits = finalxts(finalxts<=2);
xts = finalxts(finalxts>2)-2;
xf1 = [xi1(:,xits) x1(:,xts)];
xf2 = [xi2(:,xits) x2(:,xts)];
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
  y = bsxfun(@minus,x,settings.xoffset);
  y = bsxfun(@times,y,settings.gain);
  y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
  x = bsxfun(@minus,y,settings.ymin);
  x = bsxfun(@rdivide,x,settings.gain);
  x = bsxfun(@plus,x,settings.xoffset);
end
