function [y1,xf1,xf2] = thumb2_nnm(x1,x2,xi1,xi2)
%THUMB2_NNM neural network simulation function.
%
% Auto-generated by MATLAB, 26-Aug-2019 19:36:17.
% 
% [y1,xf1,xf2] = thumb2_nnm(x1,x2,xi1,xi2) takes these arguments:
%   x1 = 8xTS matrix, input #1
%   x2 = 3xTS matrix, input #2
%   xi1 = 8x2 matrix, initial 2 delay states for input #1.
%   xi2 = 3x2 matrix, initial 2 delay states for input #2.
% and returns:
%   y1 = 3xTS matrix, output #1
%   xf1 = 8x2 matrix, final 2 delay states for input #1.
%   xf2 = 3x2 matrix, final 2 delay states for input #2.
% where TS is the number of timesteps.

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [-0.1788;0.1003;-0.123;0.1587;0.3881;0.8465;-0.4056;-0.0834];
x1_step1.gain = [45.766590389016;14.2045454545455;32.6797385620915;27.1370420624152;19.4174757281553;16.4609053497942;25.4777070063695;11.5673799884326];
x1_step1.ymin = -1;

% Input 2
x2_step1.xoffset = [0;0;0];
x2_step1.gain = [0.0660937628538055;0.111160891581758;0.0744796573686469];
x2_step1.ymin = -1;

% Layer 1
b1 = [0.52727941947382706012;0.51741489919181626878;0.75789933796491326667;0.82357267556717017598;0.19766845354675269264;-0.29504682642585949859;0.57196111988306752583;-0.2174421784497857224;0.45079478988812088369;0.66655170532991336874];
IW1_1 = [0.54506222826854866526 0.10187126097256481161 0.15008191235221376991 -0.21364923649510275672 0.7928610913523025383 0.049268133903858285505 0.49049651496119656136 -0.0094439065587473645241 -0.49074390824527747146 1.1841348247156140427 -0.27766182584979515191 -0.17941425439497643568 -0.87167975936514274782 -0.10332983102584272772 -0.033364345278152872376 -0.18030891424695189018;0.12806295171238202268 0.44470798918739212757 0.10986242577038787815 -0.24219076756012816731 0.43034921656917601851 0.26538452661174877223 0.18353495347813944538 0.96469673087631657715 -0.15770920756551592978 0.53352992439350621634 -0.16666867142397251422 0.032619110481122703948 -0.17449240829580472956 -0.08645653375314701905 -0.26731859985610334496 -0.74531634124671863884;0.089213699648702599054 0.12436135017536262271 -0.38959339478401083801 0.47163261897567870795 -0.15878933438783926491 0.82993136923388977078 -0.1980897286293256121 0.38780768684066080354 0.024143064409334346471 -0.27825442562467822549 0.75352492504572310406 0.1750522679309079177 0.48227055649479549926 -0.32672795891906508681 0.21298569840302086775 0.062914638429348829218;-0.25915092290916647011 -0.42844676016172356103 -0.080396783528975515609 -0.73847040756197201983 -0.61984829959840004321 -0.48794256149322529081 -0.5529913655092320024 -0.56273250632729543419 -0.24126188978712490019 -0.36873314987370992002 -0.56177368980599806658 -0.078632230026653371358 -0.65119325674505346147 -0.65730640421209296509 -0.12945653394378181522 0.26027283909634962855;0.37852823245958228116 -0.57260226006973580226 -0.14213037877465070635 0.33805541923188164866 -0.54353840163378985828 0.87705433745016248004 0.37612093017342207446 -1.5696608357425081426 0.15304631952883382406 -0.86152258286881988614 -0.072959130089506427086 -0.088784641365166075411 -0.31422261110661919847 -0.62278057024587651913 0.67118031854106252609 -0.049246021650500612643;-0.42003557945345948443 0.25000934182757422741 0.25873223151735047498 -0.0076704765717411360626 -0.13086070944822092432 -0.2884626156459251245 -0.87519302457115522031 1.3795930398775857473 -0.25192777635136631709 0.89370910182935936472 -0.073839209591211582562 0.055320641647525238549 0.51027897427240376249 0.31637430499013219354 -0.09990100852479286142 0.14775995395682753331;-0.014702254540594162854 2.0970317944454928138 -0.12437080618109611074 -0.50756853029030624125 0.47990178889152923514 -0.73567377304782877179 -0.013749139985247753673 0.090898457432029566849 0.078194238002200780469 -1.4393939212042148323 -0.23692258745469604864 -0.02649730894002995385 0.18856606645968276847 0.71817597503073005161 -0.084101993233085828305 0.52125080833406123304;-0.11763660304891192243 -0.18291550673625497914 0.16960869313868764952 0.18741042532176785396 0.1484840194236428379 -0.29942074661619261233 0.34737555607227788013 0.28637311138822313383 0.37143597222908347755 -0.13931861788962096593 0.3432832173973300316 0.20444952731474402841 0.19492592576557421502 0.34359448812110360283 -0.3804030960122956051 -0.51412350420845387422;-0.24733293399861877582 -0.97721442580568940173 0.49616371073921028412 0.079022672160005719144 0.37047784808854999916 0.15575908446821087883 0.3478930790935811368 0.467534327181168885 0.34004802897429320385 0.18187811277453885817 0.16143587046931928697 0.55340884728508732415 -0.30639239132407702915 -0.12409633559775769263 -0.26422912784005797571 -0.14872110544055808234;0.21073016432394905961 -0.20868076551300199228 0.13130824037778127122 0.05272476889706669001 -0.15253170359832959879 -0.22550733287716021036 -0.60256268405138968536 -0.44396987420532968427 -0.46566773877568062856 0.028998289122581146632 -0.31025857598679074112 -0.24948028240215319729 -0.42135778379543803451 -0.24922467064337031073 0.25170869705256299076 0.54111322932931427143];
IW1_2 = [-0.077303827509757450098 0.73925352373604036327 -0.50485934013413968913 0.023629311085054026387 -0.97395764798958561759 1.2349513137820546937;-1.1277603223148107148 -0.59459781613284790058 -0.70320640152487734476 0.43957169899032266791 0.64242405060728968724 1.1715586347030291225;-0.94839846384590431594 -0.26674792029767935286 0.70783955811526499957 0.35421644813497649151 -1.0766334325717359377 -0.90358739785458996874;0.5540283302846144009 -1.5357701117416966419 0.73485239188827733425 -0.88096997175891977871 0.18888588252275961832 -0.56553484779251272929;0.83388651374120570381 -0.023345109210358358509 0.22965400302645341823 0.20368967398032392091 0.33096353603395434195 -0.9263456187462832947;-0.41019330154530331267 0.1727245388144304783 0.44081726538596516241 0.38287598091784708076 0.47367141504364090876 0.45264984753995818334;0.13030699958069688615 -0.64028742082315104334 -0.47252278819272275356 -0.34009112398977930924 -0.12596626860255166758 1.5802771853210739739;0.50305857553415023187 0.86470366963767875124 0.063266707809468650248 0.20731423009465740903 0.64150323137321518807 0.13480623852892695269;0.2652832438141237148 1.5313469811318327629 0.56784798013625004121 -0.11889380306487611072 -0.40046849077090374003 -0.41794517632548427999;0.20875907146647665336 -0.65512681990209442606 1.0940193313892625504 -0.034487170785828913377 -0.64319410333002058344 0.056264358778214493273];

% Layer 2
b2 = [-0.27030622119704128536;0.6374038615112032069;0.33478237905047125711];
LW2_1 = [1.3422749475706381439 -1.3844219866532694319 0.99579230280838115785 0.9471546174622305081 0.86946615216920819513 1.0995092011186902159 0.80439386693521175431 1.2945404876251354054 -0.95494945414837528741 -1.127939263713041429;-0.92552328424900898174 0.69682776394076761939 -0.92145385059697193508 -0.81370919954344256286 -0.43179252750172625319 -0.52594532360152113082 -0.56575718357951154669 -0.98429750271088445324 0.79972016198604700676 0.76266129865796106202;-1.1998314716272915348 0.98312904571008796761 -1.0408215541926162384 -1.0929039525056685189 -0.72069558460841165459 -0.90608227771536553607 -0.66353764773155154977 -0.67675297868171757631 0.51593928136446898236 1.6446809738380925303];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = [0.0660937628538055;0.111160891581758;0.0744796573686469];
y1_step1.xoffset = [0;0;0];

% ===== SIMULATION ========

% Dimensions
TS = size(x1,2); % timesteps

% Input 1 Delay States
xd1 = mapminmax_apply(xi1,x1_step1);
xd1 = [xd1 zeros(8,1)];

% Input 2 Delay States
xd2 = mapminmax_apply(xi2,x2_step1);
xd2 = [xd2 zeros(3,1)];

% Allocate Outputs
y1 = zeros(3,TS);

% Time loop
for ts=1:TS

      % Rotating delay state position
      xdts = mod(ts+1,3)+1;
    
    % Input 1
    xd1(:,xdts) = mapminmax_apply(x1(:,ts),x1_step1);
    
    % Input 2
    xd2(:,xdts) = mapminmax_apply(x2(:,ts),x2_step1);
    
    % Layer 1
    tapdelay1 = reshape(xd1(:,mod(xdts-[1 2]-1,3)+1),16,1);
    tapdelay2 = reshape(xd2(:,mod(xdts-[1 2]-1,3)+1),6,1);
    a1 = tansig_apply(b1 + IW1_1*tapdelay1 + IW1_2*tapdelay2);
    
    % Layer 2
    a2 = b2 + LW2_1*a1;
    
    % Output 1
    y1(:,ts) = mapminmax_reverse(a2,y1_step1);
end

% Final delay states
finalxts = TS+(1: 2);
xits = finalxts(finalxts<=2);
xts = finalxts(finalxts>2)-2;
xf1 = [xi1(:,xits) x1(:,xts)];
xf2 = [xi2(:,xits) x2(:,xts)];
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
  y = bsxfun(@minus,x,settings.xoffset);
  y = bsxfun(@times,y,settings.gain);
  y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
  x = bsxfun(@minus,y,settings.ymin);
  x = bsxfun(@rdivide,x,settings.gain);
  x = bsxfun(@plus,x,settings.xoffset);
end
