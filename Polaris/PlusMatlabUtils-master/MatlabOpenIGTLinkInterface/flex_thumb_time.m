function [y1,xf1,xf2] = flex_thumb_time(x1,x2,xi1,xi2)
%FLEX_THUMB_TIME neural network simulation function.
%
% Auto-generated by MATLAB, 29-Jul-2019 20:54:58.
% 
% [y1,xf1,xf2] = flex_thumb_time(x1,x2,xi1,xi2) takes these arguments:
%   x1 = 2xTS matrix, input #1
%   x2 = 3xTS matrix, input #2
%   xi1 = 2x1 matrix, initial 1 delay states for input #1.
%   xi2 = 3x1 matrix, initial 1 delay states for input #2.
% and returns:
%   y1 = 3xTS matrix, output #1
%   xf1 = 2x1 matrix, final 1 delay states for input #1.
%   xf2 = 3x1 matrix, final 1 delay states for input #2.
% where TS is the number of timesteps.

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [52.4964427338317;33.7437982467825];
x1_step1.gain = [0.116423921759623;0.149465087282209];
x1_step1.ymin = -1;

% Input 2
x2_step1.xoffset = [20.8867392410723;64.4799632124609;-42.5455437206748];
x2_step1.gain = [0.0388481887614866;0.10232698685259;0.0460379609362146];
x2_step1.ymin = -1;

% Layer 1
b1 = [0.33360786792875174456;-0.12291303200275850716;0.89978370293371690014;-0.11325922654056125305;0.58964857443193330333;0.12935019297458807963;0.41872378704655360826;0.062184838337975362199;-0.34225779632894864912;-0.18914722414738308065];
IW1_1 = [0.25744253326716282082 -1.4363894561636949554 -1.4071392182934110426 0.28758222722334425558;-0.94892997689387970084 -0.41287764923112568738 0.14497885653751294011 0.03102674363286686901;-0.55439336920762072314 0.5684276141949183847 -0.4713353644424934652 -2.2761406940519570696;1.1951943645123801474 0.50112692086633103816 -1.4414959836837346607 0.53587279423346589891;0.50725353735220757301 0.66951844169005036989 -1.0883321590173882232 -0.95119463544192606186;-0.65156496923384454867 -0.25158534605010662855 0.8902311398658542263 0.053176317318069057927;0.65441279106826799605 -0.28380082539812440112 -0.45687707892211554261 -0.11479824435118239634;-0.14520866121070119537 -0.28094249831646267435 -0.41587197205936710098 -0.6751641398910737113;0.18454685089321287705 -0.50323524275439956988 -0.2775469234591801948 -0.15213399375409294989;-0.32430648739526884983 0.21820743830787339701 0.54908827128334491974 -0.43672855205060445716];
IW1_2 = [-0.53024330823090204401 -0.83178524620355664965 -1.9295363264667790837 0.2421290613140014425 0.56269201181332695327 1.9272939098945005565;0.78082081893744637036 -0.052057425868012638381 0.2469920586396061879 0.27393739863405763835 0.5674608065436331783 0.35249816374556508514;0.75668518828660646935 -0.93321943818184716068 0.1450999935987469236 0.81234526219367020339 1.1912626585291243853 0.20382819719325140362;-0.22397281202406166267 0.2133751404186137457 -0.45988556962846233178 -1.138241458011391094 -0.91337102726008634335 -0.4096988573469732553;0.21404636941514673665 0.063279618225596662162 0.43746109118489923118 -0.15086595666653920822 -0.13687085476429905473 -0.43496612802586498425;-0.84654855626412006675 0.72525759146667490018 -1.3462698654668123766 0.71001483119405417455 0.019511566865640445761 1.1383881794823389466;-0.20482709578246383053 -0.85462689260104618416 -0.12119498839330826445 -0.1394800428490846067 0.14373545696703571295 -0.11708149784950142025;-2.6512354520806242775 -0.0032470523125726754796 0.49373332990824747579 1.8521551987649238491 -0.47021772973120889993 0.155600708653108738;-2.7391893206369783975 1.6066536805450630787 1.1393871885752671069 0.83849836601695382221 -1.8808506389762953415 0.13591668905197226702;0.85375379089698766322 0.30081011907345189815 1.219259950199343745 0.48381818136359583393 0.020622279753814917042 -0.92856700391417368312];

% Layer 2
b2 = [0.54252509760276035333;-0.25530586956256878794;0.00229054494121240515];
LW2_1 = [0.9480014846663810113 -1.1788203411540338905 1.0950748383195447744 0.80788936380765918877 -1.5285124483631784553 -0.6753914838820684885 -1.5051961216807261401 -1.3207458163742209489 0.95006395226095374795 1.5296364097362376011;-0.53035686884959587495 0.46264483309730586313 -0.54404288711537218681 -0.45542771289604161433 1.2239692767283423258 0.75197680129112920433 0.015866620034515166449 0.57539458699148904319 -0.5315203879401099174 -0.8045180636100206506;-0.43090330860381953482 -0.40810739782861998881 -0.62427514105073245165 -1.5651324741232037763 0.94339532057354646977 -1.1996033364507787677 -0.92936414157006919101 0.72627768379240320584 -0.61506267727941399404 -1.5727725820310272109];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = [0.0388481887614866;0.10232698685259;0.0460379609362146];
y1_step1.xoffset = [20.8867392410723;64.4799632124609;-42.5455437206748];

% ===== SIMULATION ========

% Dimensions
TS = size(x1,2); % timesteps

% Input 1 Delay States
xd1 = mapminmax_apply(xi1,x1_step1);
xd1 = [xd1 zeros(2,1)];

% Input 2 Delay States
xd2 = mapminmax_apply(xi2,x2_step1);
xd2 = [xd2 zeros(3,1)];

% Allocate Outputs
y1 = zeros(3,TS);

% Time loop
for ts=1:TS

      % Rotating delay state position
      xdts = mod(ts+0,2)+1;
    
    % Input 1
    xd1(:,xdts) = mapminmax_apply(x1(:,ts),x1_step1);
    
    % Input 2
    xd2(:,xdts) = mapminmax_apply(x2(:,ts),x2_step1);
    
    % Layer 1
    tapdelay1 = reshape(xd1(:,mod(xdts-[0 1]-1,2)+1),4,1);
    tapdelay2 = reshape(xd2(:,mod(xdts-[0 1]-1,2)+1),6,1);
    a1 = tansig_apply(b1 + IW1_1*tapdelay1 + IW1_2*tapdelay2);
    
    % Layer 2
    a2 = b2 + LW2_1*a1;
    
    % Output 1
    y1(:,ts) = mapminmax_reverse(a2,y1_step1);
end

% Final delay states
finalxts = TS+(1: 1);
xits = finalxts(finalxts<=1);
xts = finalxts(finalxts>1)-1;
xf1 = [xi1(:,xits) x1(:,xts)];
xf2 = [xi2(:,xits) x2(:,xts)];
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
  y = bsxfun(@minus,x,settings.xoffset);
  y = bsxfun(@times,y,settings.gain);
  y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
  x = bsxfun(@minus,y,settings.ymin);
  x = bsxfun(@rdivide,x,settings.gain);
  x = bsxfun(@plus,x,settings.xoffset);
end
