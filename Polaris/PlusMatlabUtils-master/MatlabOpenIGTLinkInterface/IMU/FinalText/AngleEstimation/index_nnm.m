function [y1,xf1,xf2] = index_nnm(x1,x2,xi1,xi2)
%INDEX_NNM neural network simulation function.
%
% Auto-generated by MATLAB, 27-Aug-2019 16:40:16.
% 
% [y1,xf1,xf2] = index_nnm(x1,x2,xi1,xi2) takes these arguments:
%   x1 = 8xTS matrix, input #1
%   x2 = 3xTS matrix, input #2
%   xi1 = 8x2 matrix, initial 2 delay states for input #1.
%   xi2 = 3x2 matrix, initial 2 delay states for input #2.
% and returns:
%   y1 = 3xTS matrix, output #1
%   xf1 = 8x2 matrix, final 2 delay states for input #1.
%   xf2 = 3x2 matrix, final 2 delay states for input #2.
% where TS is the number of timesteps.

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [-0.3634;-0.0568;0.8731;-0.3286;-0.1469;-0.0325;0.8804;0.1802];
x1_step1.gain = [3.94788787998421;4.35445242760723;15.785319652723;2.87976961843053;8.22706705059646;11.4285714285714;21.2089077412513;7.6219512195122];
x1_step1.ymin = -1;

% Input 2
x2_step1.xoffset = [-37.58893822;-56.51672659;-19.90957524];
x2_step1.gain = [0.0203652161747678;0.0399559081207787;0.0383263708961283];
x2_step1.ymin = -1;

% Layer 1
b1 = [0.38908536864040305092;1.5520419418589113114;0.41695858260867574296;1.0178816029220805195;0.1115510323929259362;-0.36474796046293594953;0.79789151019242832152;0.47958375562342198117;0.40349286979350407201;-0.063715144706885190606];
IW1_1 = [-0.61538976166603365225 0.31935250171204349057 0.2634259620507590216 -0.56725469813191931046 0.49103015685931805656 -0.31230713874382587392 -0.1317401269682846876 -0.69090626760374818094 0.21888485507494298554 -0.32061582243818148585 -0.27348766515281369704 0.12058467592672170166 -0.0886664682608652166 0.31954104413445932886 -0.24568672267890881433 0.12645376352462203706;-0.28806815811769115321 0.19947836855076539475 -0.034229088378613707622 -0.60270773220361462119 0.78285820083318946594 0.0067248344337367711721 -0.49293014106605581581 0.044809311825576146615 -0.32697158221138739043 -0.39191833737233616741 -0.27059119038638246302 0.99681588036862123214 -0.24192648401094271615 0.2331138477432403433 0.2459193026278813643 -0.15203476127445311739;-0.5165255080283530642 0.44293953732936408585 0.42817969631072916314 -0.059277082009951256869 -0.86313225705811824628 0.09468397435443036414 0.040043982261200782025 0.29618840000073948238 0.25580487198500861945 -0.50748677756624982482 -0.36672396541620494448 0.18199961980004075723 0.58578307460721179556 -0.099884803683596048995 0.41671734628605727746 0.051866123615044848472;0.19624209125017147426 -0.10774530476357621622 -0.17134129216602389523 0.15257134388022433602 0.41132604933793870394 0.12570026306156353857 0.097655443319642279421 -0.71713398164356967346 0.24939875256388779889 0.068619767911974174912 0.17246179706658651409 -0.50607227082518335681 -0.67482238296215757423 -0.30337314543284871204 -0.0078363215728983297292 0.56331862612593408546;0.35823429888131269605 -0.10169971706186893556 -0.25136915819290794882 0.13968717472776262523 0.018883666775151190104 -0.089958139907066581031 -0.032183495125886932287 0.15235690940199425603 -0.25450299373485690824 0.085042766720529711089 0.17938032522590408036 0.032597682123622191697 -0.12349830566298883316 0.034863607407796301518 0.11427527008502433303 0.099665081674867372907;0.69132491757139868938 -0.2655437245808542901 -0.21083100544711616542 0.5803412569947553612 -0.78926463757165787882 0.2563199437077197107 0.023771334114424551298 0.26363707487621634851 0.20773474532259178504 0.34282809219366383591 0.24088848857997710584 -0.66626332550185451975 0.11764127071268369595 -0.51411741521844001035 0.4406384788442841427 0.24664450641054572189;-0.37738833166866320168 0.896840778234915037 0.40113556725883525722 -0.40926883751802711764 -0.66936032687840496536 0.14633684347961462002 0.2633597633855912501 0.49455713651953059351 0.08490649510436285019 -0.91797270576791623053 -0.40406388569112544618 0.54341495245115267743 0.39758519697278787985 -0.19159133842564071704 0.23020388544968806155 -0.12837764753093058867;0.9398752167895118026 0.41555599588947533807 -0.36739402846086038901 -0.2618143174915932847 -1.1893578540778524388 -0.76299936919088728882 -0.0051616119867259752096 0.32134103523645213274 -1.1662886229683386841 -0.62268666924954163555 -0.20329926801924508295 0.096382512869026507052 0.98022270389149690484 0.2525452240729257336 -0.068031939853386416694 -0.034280033409894355989;-0.31136442084910453953 -0.56570860534078992732 -0.17493456964081396943 0.6477988462300668937 -0.64124437920167587368 0.28145835720247802669 0.73584077267982350712 0.32717734911641183082 -1.1507552131545024654 -0.25809627627635717273 0.17519839092470029795 -0.065255323905581238964 0.1426835527474013543 -0.083915585184565988364 0.31056653346413831684 0.61802104970988469557;1.4535871060868965632 -0.61374727897496139661 -0.88772771040878828419 0.8077260042294197584 0.29603496805873935616 0.080388398624534965209 -0.0019918053566221880814 0.40887870737213111161 -0.78586599551037394917 0.54489720139684427735 0.6414297441885364881 -0.22437942049604125971 -0.64631767705036446969 -0.28587330873671873421 0.25247872289123324263 0.31426672905000901936];
IW1_2 = [0.51784009077346759842 -0.020832212728289386389 0.9847889929781514784 0.60104761467116241125 -0.067340202984029165489 -0.31774118760296410358;-2.2784319793485554584 -0.62353467855986222101 -0.64920891933881619273 0.029955486595875647354 0.27183805475952493858 0.84336456226273526227;2.5924601288289084167 -1.1208607799774295 -0.53156534398680466147 -2.3854053155809840092 0.66796448009606212981 0.52404186708847455556;2.0181613704509708818 0.36929754342744380846 1.1945825025639584815 -0.26618326768925293369 -0.018620920355986475547 -1.0509102185845566879;0.39394722759626543684 0.60813430195275752776 0.71646555769364972388 -0.28015630868310414936 -0.20505951629435831274 -0.2525346259541813021;0.26479885030672833945 0.85759692917752550212 0.04974150308785145469 -0.76440640154737327094 -0.18540474245326754588 -0.39344715443603972549;2.9534816052458903179 -1.4120795395886831525 -0.6891904699521209654 -2.7804120380880172902 0.99256401380427394798 0.6524099119617092768;0.72955327855999008158 0.70304906882126794176 -4.3740371092173901957 -1.1992916980735057741 -1.2471523240370818719 3.4327198253403339301;1.3714775399522676214 -1.6722027923006976824 -0.003203790611472287931 -0.56772965437342504114 -0.52239231822617437917 0.72356554353632651644;-0.29191987867751756358 -0.099378162856083349097 -0.63321871643170946076 -0.42254284079457038459 -0.063692393248378970094 0.090360193923871595656];

% Layer 2
b2 = [-0.043322444778516051855;0.11890643812093242004;-0.24293845614760026241];
LW2_1 = [-0.36242090305001034567 -0.47053894376943233846 1.5436508614390660465 0.62131012755910641765 0.36344235070562552758 -0.74851207040656031477 -1.1000521153610103298 0.098327126884343377111 -0.25465428955267604971 0.07557291628764083169;-1.6326079982411547675 -0.36284970735444177503 -0.8597868381252491421 0.67356881478068286739 1.2149543077712321448 -0.57739690537196808329 0.23156890656171483234 0.34796813075280547123 -0.031014786435186330465 -1.1108831527181919352;1.5630380483104096001 0.5207290654282843434 -0.15618431999374568497 -0.81569858712776177612 0.23896563738411116806 0.99296160839536706799 0.34248251549124719695 -0.33913461881809470189 0.19659153291773767691 0.43776059587129190209];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = [0.0203652161747678;0.0399559081207787;0.0383263708961283];
y1_step1.xoffset = [-37.58893822;-56.51672659;-19.90957524];

% ===== SIMULATION ========

% Dimensions
TS = size(x1,2); % timesteps

% Input 1 Delay States
xd1 = mapminmax_apply(xi1,x1_step1);
xd1 = [xd1 zeros(8,1)];

% Input 2 Delay States
xd2 = mapminmax_apply(xi2,x2_step1);
xd2 = [xd2 zeros(3,1)];

% Allocate Outputs
y1 = zeros(3,TS);

% Time loop
for ts=1:TS

      % Rotating delay state position
      xdts = mod(ts+1,3)+1;
    
    % Input 1
    xd1(:,xdts) = mapminmax_apply(x1(:,ts),x1_step1);
    
    % Input 2
    xd2(:,xdts) = mapminmax_apply(x2(:,ts),x2_step1);
    
    % Layer 1
    tapdelay1 = reshape(xd1(:,mod(xdts-[1 2]-1,3)+1),16,1);
    tapdelay2 = reshape(xd2(:,mod(xdts-[1 2]-1,3)+1),6,1);
    a1 = tansig_apply(b1 + IW1_1*tapdelay1 + IW1_2*tapdelay2);
    
    % Layer 2
    a2 = b2 + LW2_1*a1;
    
    % Output 1
    y1(:,ts) = mapminmax_reverse(a2,y1_step1);
end

% Final delay states
finalxts = TS+(1: 2);
xits = finalxts(finalxts<=2);
xts = finalxts(finalxts>2)-2;
xf1 = [xi1(:,xits) x1(:,xts)];
xf2 = [xi2(:,xits) x2(:,xts)];
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
  y = bsxfun(@minus,x,settings.xoffset);
  y = bsxfun(@times,y,settings.gain);
  y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
  x = bsxfun(@minus,y,settings.ymin);
  x = bsxfun(@rdivide,x,settings.gain);
  x = bsxfun(@plus,x,settings.xoffset);
end
