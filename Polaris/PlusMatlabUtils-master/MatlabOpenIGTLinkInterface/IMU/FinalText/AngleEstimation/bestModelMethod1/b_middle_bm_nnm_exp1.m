function [y1,xf1,xf2] = middle_bm_nnm_exp1(x1,x2,xi1,xi2)
%MIDDLE_BM_NNM_EXP1 neural network simulation function.
%
% Auto-generated by MATLAB, 27-Aug-2019 18:39:49.
% 
% [y1,xf1,xf2] = middle_bm_nnm_exp1(x1,x2,xi1,xi2) takes these arguments:
%   x1 = 8xTS matrix, input #1
%   x2 = 3xTS matrix, input #2
%   xi1 = 8x2 matrix, initial 2 delay states for input #1.
%   xi2 = 3x2 matrix, initial 2 delay states for input #2.
% and returns:
%   y1 = 3xTS matrix, output #1
%   xf1 = 8x2 matrix, final 2 delay states for input #1.
%   xf2 = 3x2 matrix, final 2 delay states for input #2.
% where TS is the number of timesteps.

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [-0.4931;-0.087;0.7581;-0.447;-0.4389;-0.0141;0.8263;0.1727];
x1_step1.gain = [5.12689054088695;4.46428571428571;9.00900900900901;2.20264317180617;8.68432479374729;9.14913083257091;16.0901045856798;8.09061488673139];
x1_step1.ymin = -1;

% Input 2
x2_step1.xoffset = [-42.35398667;-27.72971757;-11.74116906];
x2_step1.gain = [0.0198931201438839;0.0425556129037359;0.0519258024025963];
x2_step1.ymin = -1;

% Layer 1
b1 = [0.10042360613237422129;0.015267979586511840062;-0.033710849484698046652;-0.033310338930067379115;0.0040509402226283621959];
IW1_1 = [0.15921130120044152401 0.37554237186224737055 -0.68575252520830021208 0.86551004737942671685 2.7045978209921761604 -1.2393089241786430232 0.27260916338121643498 1.6763668503506603535 -0.071789134565401910293 -0.1905509722626131941 0.68741097616797464109 -1.4484925667214600953 -1.7590508193270075754 0.78853500888660932322 -1.8868842150354891984 -2.8969446682423325434;-0.43662349048608162239 -0.31630635116891453462 0.24155244011899540402 -0.39044199749587693571 -0.39255282346421466189 -0.45234946900217287702 1.4503464390701692466 0.17557900654902677817 0.14813554722439878364 0.22799801194730165421 -0.24463902495032643913 0.1302711169959103743 0.11384455185660630194 0.39113894903582319129 -1.2502634583818408309 -0.023687744422471308098;0.039003630749550183276 0.16731761032747349827 -0.33203786837936566378 0.37415243653313184913 1.3513684810593384888 -0.69229075649753668564 0.32735455807329838507 0.85383398995045534097 -0.041967434708412063027 -0.081714657840862639504 0.33854063601463463273 -0.72567975156346986587 -0.90640666601220054588 0.44067894298102711081 -1.1154897774663483645 -1.4489373845796702511;0.35092148983384424676 0.15402819105909032471 -0.23524877092565002479 0.46240519682656233691 0.47896673136777645485 0.33431835160129802498 -1.1720573462315844182 -0.026505845708018994228 -0.12393066186175218102 -0.091166455879900173964 0.22848220222942797197 -0.24144025005030156361 -0.2460813194046315433 -0.22647444109286571368 0.95233409097553090028 -0.16648011063946924204;0.01008951260999572247 0.10408986596788043222 -0.16161175023166265974 0.19772874808388818391 0.70429438268905597553 -0.41882606578750619652 0.22358413452749484329 0.5327099975738409654 -0.006922256672559675382 -0.061779967252449538573 0.16163835922271238554 -0.37901296883684054695 -0.46360719281119838753 0.28084202714534833856 -0.66138263504718963759 -0.86298956521603198411];
IW1_2 = [-0.42795970087053930575 -0.42925950952506070069 -0.11618372210276711742 0.8666166541973132631 0.65577934639805146588 0.30207956018521681107;2.675086499286818853 1.2182219550790041041 -1.2096447937470167222 -2.2693662615862804088 -1.4483186904877001222 0.83302745410585532504;0.11297739237922115041 -0.34069242545058325833 -0.28573465305946560422 0.14197899900454091782 0.21197087855876220464 0.24704719281356096738;-2.3628410035026772285 -0.4655744374827646137 0.25619064563577725879 1.9685611215066467494 0.96243612039328363394 -0.18827200008704653156;-0.10620606447696487318 0.2047043717417191544 0.11690508952854154756 0.14163262664013259728 -0.0041625136873342316948 0.057043393901850106276];

% Layer 2
b2 = [-0.66201459169363652268;-0.1812894983318810993;-0.17005206990853014015];
LW2_1 = [4.5718402660369754642 0.22338612148260861279 -5.8363346910756845887 -1.5065799130647468118 -5.1226109302773030763;1.2057599169934600791 1.1361881698171163446 -2.6991641583116781078 0.83602521667777940362 0.59635384006406488844;0.52802864497655432885 -1.4626551216587739823 -1.7897171028377336643 -1.9155504294473277849 1.6926254206653139622];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = [0.0198931201438839;0.0425556129037359;0.0519258024025963];
y1_step1.xoffset = [-42.35398667;-27.72971757;-11.74116906];

% ===== SIMULATION ========

% Dimensions
TS = size(x1,2); % timesteps

% Input 1 Delay States
xd1 = mapminmax_apply(xi1,x1_step1);
xd1 = [xd1 zeros(8,1)];

% Input 2 Delay States
xd2 = mapminmax_apply(xi2,x2_step1);
xd2 = [xd2 zeros(3,1)];

% Allocate Outputs
y1 = zeros(3,TS);

% Time loop
for ts=1:TS

      % Rotating delay state position
      xdts = mod(ts+1,3)+1;
    
    % Input 1
    xd1(:,xdts) = mapminmax_apply(x1(:,ts),x1_step1);
    
    % Input 2
    xd2(:,xdts) = mapminmax_apply(x2(:,ts),x2_step1);
    
    % Layer 1
    tapdelay1 = reshape(xd1(:,mod(xdts-[1 2]-1,3)+1),16,1);
    tapdelay2 = reshape(xd2(:,mod(xdts-[1 2]-1,3)+1),6,1);
    a1 = tansig_apply(b1 + IW1_1*tapdelay1 + IW1_2*tapdelay2);
    
    % Layer 2
    a2 = b2 + LW2_1*a1;
    
    % Output 1
    y1(:,ts) = mapminmax_reverse(a2,y1_step1);
end

% Final delay states
finalxts = TS+(1: 2);
xits = finalxts(finalxts<=2);
xts = finalxts(finalxts>2)-2;
xf1 = [xi1(:,xits) x1(:,xts)];
xf2 = [xi2(:,xits) x2(:,xts)];
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
  y = bsxfun(@minus,x,settings.xoffset);
  y = bsxfun(@times,y,settings.gain);
  y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
  x = bsxfun(@minus,y,settings.ymin);
  x = bsxfun(@rdivide,x,settings.gain);
  x = bsxfun(@plus,x,settings.xoffset);
end
