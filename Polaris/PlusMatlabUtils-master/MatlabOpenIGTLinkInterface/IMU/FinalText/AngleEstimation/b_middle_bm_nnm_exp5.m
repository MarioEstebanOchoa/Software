function [y1,xf1,xf2] = middle_bm_nnm_exp5(x1,x2,xi1,xi2)
%MIDDLE_BM_NNM_EXP5 neural network simulation function.
%
% Auto-generated by MATLAB, 13-Sep-2019 14:33:19.
% 
% [y1,xf1,xf2] = middle_bm_nnm_exp5(x1,x2,xi1,xi2) takes these arguments:
%   x1 = 5xTS matrix, input #1
%   x2 = 3xTS matrix, input #2
%   xi1 = 5x2 matrix, initial 2 delay states for input #1.
%   xi2 = 3x2 matrix, initial 2 delay states for input #2.
% and returns:
%   y1 = 3xTS matrix, output #1
%   xf1 = 5x2 matrix, final 2 delay states for input #1.
%   xf2 = 3x2 matrix, final 2 delay states for input #2.
% where TS is the number of timesteps.

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [-0.478430112409621;-0.351279271702234;-0.234764927001974;-0.148282331331232;-0.0835727366484347];
x1_step1.gain = [2.2807501775659;3.62779767099633;5.16678629396411;6.36699236891776;9.26862345268153];
x1_step1.ymin = -1;

% Input 2
x2_step1.xoffset = [-42.35398667;-25.03195236;-5.972213304];
x2_step1.gain = [0.0198931201438839;0.045147174777309;0.0643454772835516];
x2_step1.ymin = -1;

% Layer 1
b1 = [0.16637915256393376318;-0.29807048570204697224;0.15851946764468397011;0.021248039322029035197;0.075526945358559929855;-0.0059805339594100918529];
IW1_1 = [0.24072394083483100724 0.10128767523777830462 0.040901481121438001964 -0.062958490874846506635 0.023305434133278762898 -0.022250899741133086523 0.00376165828683341745 -0.034961988123807498374 0.028016296336280537699 -0.025350062437673480387;-0.30244778605290456586 -0.064549674189760458676 0.060852800080666652471 0.058357795148636412708 -0.021116916910470684421 0.027968218946197481029 -0.086326104129167538503 -0.067060935725749074021 -0.0078198335653659589023 0.028782356246324952015;0.15610926530576399451 0.059588865757884322549 0.035222533782781742517 -0.048985355331388050204 -0.027569464134753807194 0.001160193372880502418 0.018327588641933803548 -0.052657086131312841326 0.011119887365395098033 0.025211281331776330683;0.24095732996684388061 0.21072803705609291502 1.5958455332305840901 -0.2601401373712832199 -1.2340956027490721514 0.11532590119787947125 -0.92857443919477034022 -2.0824158139025108483 0.36177169634139361154 1.333866519244477411;-1.9659245161438996252 -1.2517417234973184925 -1.6120849518779847287 0.51640547855422258561 0.62538031048625708497 0.17323547114522866441 0.24407206080839050077 2.2410082846121150979 -0.18803798602565413578 -0.47932055923231153827;1.1700934274639427368 0.10583480881943485574 -0.26210449563147009133 -0.14530162213390102055 0.17553222065250240203 -0.18666720775303485835 0.7865479667184555046 0.28469053564854973626 -0.071930342122685592132 -0.20700815537296815561];
IW1_2 = [-0.48024724286829989506 -0.084111249953641512023 -0.047102217964273780659 -0.072739213518521972368 -0.128380512494507798 0.22292856912333813835;-0.35201304500589108981 0.23160843691880250717 0.16230641992502944926 0.57936217910204246273 0.087161390790144163687 -0.39610261259113016541;-0.36307496728846389011 0.42230663899844445019 0.20994744223317138299 -0.002843572652678615087 -0.22176103572520522444 0.12692369686118454286;-0.92084648290187454123 -2.8243168586575340129 0.81652355533719378489 1.2409390045807966452 2.4848141614280305767 -0.94914249298510799946;0.94417670914787898973 -0.19770038001339790279 2.2744455577039013328 -0.011300838801657556859 1.0101846669648242294 -2.8235812428443494149;0.58054967886206132466 1.4818381021352629023 -1.8893795084297972942 -1.9374101704936066426 -1.7987366557555404256 2.3907673650339402727];

% Layer 2
b2 = [-0.23643419236200138855;1.4215485139482266774;-0.25824777623233086121;2.83509528142228584;1.5106932803188450887;0.21977489431327329461;0.28490940520992996676;0.17049047430951128068];
LW2_1 = [1.2914740088551561747 -0.72444050864257991673 -0.5479895214710457374 0.25594582420263423117 -0.46572950598509843534 1.4114973617705468545;-1.1643342223266679447 2.1561831593835272258 0.53547960842522501768 -0.41767754601796186487 0.2890268358709979224 -0.021332572278708862579;0.44924324135630266941 -0.41468522250270012375 0.57121043840853569229 -0.52299125463665241398 -0.35169295470229827716 -1.0178203295050356481;3.2408673712931856947 -2.5596546921364380367 0.19585954702595753663 -3.1194308462437629892 0.94171700177705797152 -1.3208727821271624148;-0.89058465881866255565 -0.85686736451302702999 -0.0068731591458528664557 -0.32543285283457740187 0.56087245998526313873 0.50965465797605069564;1.3799547400329814639 1.0569272514145215958 -0.62190477001610156016 -0.63831107921910490433 -0.83857454127300623536 -0.62202637274166994175;1.0759330970564362495 0.3698366081394344751 -1.2754101237422321713 -0.38736525649391090331 -0.46001552443594839747 -0.52821094041521687856;-2.6532519854427389916 -0.76278356729523710822 -0.034756226730560065008 0.95597779620029377234 0.93745478201979981492 1.6760206759985154523];

% Layer 3
b3 = [-0.66182188716624967828;0.012406117628202012471;0.43911375016890497047];
LW3_2 = [-0.033424475064344032205 -0.31968327838387028406 2.9379008715436372157 1.9285508768806467472 -1.2904854354386094961 1.0498944433960764044 0.68049525132317800757 2.5591526156183328489;-0.40511065478346891533 0.16865618769174642311 -0.38917174018356293086 1.0640203204828404537 -0.93429054835633673637 2.111503252564741473 -2.1343123838957676064 0.63783560442940134827;0.4409288767634318984 -0.17885375811177622873 2.5512776153819256564 0.37169627327738469225 -0.75348196342330320263 -0.91595511449048416797 -0.50921615874858483508 0.33610928590279576245];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = [0.0198931201438839;0.045147174777309;0.0643454772835516];
y1_step1.xoffset = [-42.35398667;-25.03195236;-5.972213304];

% ===== SIMULATION ========

% Dimensions
TS = size(x1,2); % timesteps

% Input 1 Delay States
xd1 = mapminmax_apply(xi1,x1_step1);
xd1 = [xd1 zeros(5,1)];

% Input 2 Delay States
xd2 = mapminmax_apply(xi2,x2_step1);
xd2 = [xd2 zeros(3,1)];

% Allocate Outputs
y1 = zeros(3,TS);

% Time loop
for ts=1:TS

      % Rotating delay state position
      xdts = mod(ts+1,3)+1;
    
    % Input 1
    xd1(:,xdts) = mapminmax_apply(x1(:,ts),x1_step1);
    
    % Input 2
    xd2(:,xdts) = mapminmax_apply(x2(:,ts),x2_step1);
    
    % Layer 1
    tapdelay1 = reshape(xd1(:,mod(xdts-[1 2]-1,3)+1),10,1);
    tapdelay2 = reshape(xd2(:,mod(xdts-[1 2]-1,3)+1),6,1);
    a1 = tansig_apply(b1 + IW1_1*tapdelay1 + IW1_2*tapdelay2);
    
    % Layer 2
    a2 = tansig_apply(b2 + LW2_1*a1);
    
    % Layer 3
    a3 = b3 + LW3_2*a2;
    
    % Output 1
    y1(:,ts) = mapminmax_reverse(a3,y1_step1);
end

% Final delay states
finalxts = TS+(1: 2);
xits = finalxts(finalxts<=2);
xts = finalxts(finalxts>2)-2;
xf1 = [xi1(:,xits) x1(:,xts)];
xf2 = [xi2(:,xits) x2(:,xts)];
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
  y = bsxfun(@minus,x,settings.xoffset);
  y = bsxfun(@times,y,settings.gain);
  y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
  x = bsxfun(@minus,y,settings.ymin);
  x = bsxfun(@rdivide,x,settings.gain);
  x = bsxfun(@plus,x,settings.xoffset);
end
